/*
* generated by Xtext
*/

package com.eu.evidence.rtdruid.oil.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class OilGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class OilFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OilFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOilFileAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cOIL_VERSIONKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOilVersionAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOilVersionSTRINGTerminalRuleCall_1_2_0 = (RuleCall)cOilVersionAssignment_1_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cImplementationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImplementationOilImplementationParserRuleCall_2_0 = (RuleCall)cImplementationAssignment_2.eContents().get(0);
		private final Assignment cApplicationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cApplicationOilApplicationParserRuleCall_3_0 = (RuleCall)cApplicationAssignment_3.eContents().get(0);
		
		//OilFile:
		//
		//	{OilFile} ("OIL_VERSION" "=" oilVersion=STRING ";")? Implementation=OilImplementation? Application=OilApplication?;
		public ParserRule getRule() { return rule; }

		//{OilFile} ("OIL_VERSION" "=" oilVersion=STRING ";")? Implementation=OilImplementation? Application=OilApplication?
		public Group getGroup() { return cGroup; }

		//{OilFile}
		public Action getOilFileAction_0() { return cOilFileAction_0; }

		//("OIL_VERSION" "=" oilVersion=STRING ";")?
		public Group getGroup_1() { return cGroup_1; }

		//"OIL_VERSION"
		public Keyword getOIL_VERSIONKeyword_1_0() { return cOIL_VERSIONKeyword_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_1_1() { return cEqualsSignKeyword_1_1; }

		//oilVersion=STRING
		public Assignment getOilVersionAssignment_1_2() { return cOilVersionAssignment_1_2; }

		//STRING
		public RuleCall getOilVersionSTRINGTerminalRuleCall_1_2_0() { return cOilVersionSTRINGTerminalRuleCall_1_2_0; }

		//";"
		public Keyword getSemicolonKeyword_1_3() { return cSemicolonKeyword_1_3; }

		//Implementation=OilImplementation?
		public Assignment getImplementationAssignment_2() { return cImplementationAssignment_2; }

		//OilImplementation
		public RuleCall getImplementationOilImplementationParserRuleCall_2_0() { return cImplementationOilImplementationParserRuleCall_2_0; }

		//Application=OilApplication?
		public Assignment getApplicationAssignment_3() { return cApplicationAssignment_3; }

		//OilApplication
		public RuleCall getApplicationOilApplicationParserRuleCall_3_0() { return cApplicationOilApplicationParserRuleCall_3_0; }
	}

	public class OilImplementationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OilImplementation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIMPLEMENTATIONKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOilObjectsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOilObjectsOilObjectImplParserRuleCall_3_0 = (RuleCall)cOilObjectsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//// (":" description=STRING)? 
		//
		//OilImplementation:
		//
		//	"IMPLEMENTATION" name=ID "{" OilObjects+=OilObjectImpl* "}" ";";
		public ParserRule getRule() { return rule; }

		//"IMPLEMENTATION" name=ID "{" OilObjects+=OilObjectImpl* "}" ";"
		public Group getGroup() { return cGroup; }

		//"IMPLEMENTATION"
		public Keyword getIMPLEMENTATIONKeyword_0() { return cIMPLEMENTATIONKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//OilObjects+=OilObjectImpl*
		public Assignment getOilObjectsAssignment_3() { return cOilObjectsAssignment_3; }

		//OilObjectImpl
		public RuleCall getOilObjectsOilObjectImplParserRuleCall_3_0() { return cOilObjectsOilObjectImplParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class OilObjectImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OilObjectImpl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeObjectTypeEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cParametersAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cParametersParameterTypeParserRuleCall_2_0 = (RuleCall)cParametersAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cDescriptionAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OilObjectImpl:
		//
		//	type=ObjectType "{" Parameters+=ParameterType* "}" (":" description=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//type=ObjectType "{" Parameters+=ParameterType* "}" (":" description=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//type=ObjectType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//ObjectType
		public RuleCall getTypeObjectTypeEnumRuleCall_0_0() { return cTypeObjectTypeEnumRuleCall_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//Parameters+=ParameterType*
		public Assignment getParametersAssignment_2() { return cParametersAssignment_2; }

		//ParameterType
		public RuleCall getParametersParameterTypeParserRuleCall_2_0() { return cParametersParameterTypeParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }

		//(":" description=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//":"
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_4_1() { return cDescriptionAssignment_4_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_4_1_0() { return cDescriptionSTRINGTerminalRuleCall_4_1_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class OilApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OilApplication");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCPUKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOilObjectsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOilObjectsOilObjectParserRuleCall_3_0 = (RuleCall)cOilObjectsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDescriptionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cDescriptionAssignment_5_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//OilApplication:
		//
		//	"CPU" name=ID "{" OilObjects+=OilObject* "}" (":" description=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//"CPU" name=ID "{" OilObjects+=OilObject* "}" (":" description=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//"CPU"
		public Keyword getCPUKeyword_0() { return cCPUKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//OilObjects+=OilObject*
		public Assignment getOilObjectsAssignment_3() { return cOilObjectsAssignment_3; }

		//OilObject
		public RuleCall getOilObjectsOilObjectParserRuleCall_3_0() { return cOilObjectsOilObjectParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//(":" description=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//":"
		public Keyword getColonKeyword_5_0() { return cColonKeyword_5_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_5_1() { return cDescriptionAssignment_5_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_5_1_0() { return cDescriptionSTRINGTerminalRuleCall_5_1_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class ParameterTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParameterType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cValueTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVariantTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cReferenceTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ParameterType:
		//
		//	ValueType | VariantType | ReferenceType;
		public ParserRule getRule() { return rule; }

		//ValueType | VariantType | ReferenceType
		public Alternatives getAlternatives() { return cAlternatives; }

		//ValueType
		public RuleCall getValueTypeParserRuleCall_0() { return cValueTypeParserRuleCall_0; }

		//VariantType
		public RuleCall getVariantTypeParserRuleCall_1() { return cVariantTypeParserRuleCall_1; }

		//ReferenceType
		public RuleCall getReferenceTypeParserRuleCall_2() { return cReferenceTypeParserRuleCall_2; }
	}

	public class ValidValuesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValidValues");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRangeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cValueListParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ValidValues:
		//
		//	Range | ValueList;
		public ParserRule getRule() { return rule; }

		//Range | ValueList
		public Alternatives getAlternatives() { return cAlternatives; }

		//Range
		public RuleCall getRangeParserRuleCall_0() { return cRangeParserRuleCall_0; }

		//ValueList
		public RuleCall getValueListParserRuleCall_1() { return cValueListParserRuleCall_1; }
	}

	public class ValueListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cValueListAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValuesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValuesGenericNumberParserRuleCall_1_0 = (RuleCall)cValuesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValuesGenericNumberParserRuleCall_2_1_0 = (RuleCall)cValuesAssignment_2_1.eContents().get(0);
		
		//ValueList:
		//
		//	{ValueList} values+=GenericNumber ("," values+=GenericNumber)*;
		public ParserRule getRule() { return rule; }

		//{ValueList} values+=GenericNumber ("," values+=GenericNumber)*
		public Group getGroup() { return cGroup; }

		//{ValueList}
		public Action getValueListAction_0() { return cValueListAction_0; }

		//values+=GenericNumber
		public Assignment getValuesAssignment_1() { return cValuesAssignment_1; }

		//GenericNumber
		public RuleCall getValuesGenericNumberParserRuleCall_1_0() { return cValuesGenericNumberParserRuleCall_1_0; }

		//("," values+=GenericNumber)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//values+=GenericNumber
		public Assignment getValuesAssignment_2_1() { return cValuesAssignment_2_1; }

		//GenericNumber
		public RuleCall getValuesGenericNumberParserRuleCall_2_1_0() { return cValuesGenericNumberParserRuleCall_2_1_0; }
	}

	public class RangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Range");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRangeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cMinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMinGenericNumberParserRuleCall_1_0 = (RuleCall)cMinAssignment_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMaxAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMaxGenericNumberParserRuleCall_3_0 = (RuleCall)cMaxAssignment_3.eContents().get(0);
		
		//Range:
		//
		//	{Range} min=GenericNumber ".." max=GenericNumber;
		public ParserRule getRule() { return rule; }

		//{Range} min=GenericNumber ".." max=GenericNumber
		public Group getGroup() { return cGroup; }

		//{Range}
		public Action getRangeAction_0() { return cRangeAction_0; }

		//min=GenericNumber
		public Assignment getMinAssignment_1() { return cMinAssignment_1; }

		//GenericNumber
		public RuleCall getMinGenericNumberParserRuleCall_1_0() { return cMinGenericNumberParserRuleCall_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_2() { return cFullStopFullStopKeyword_2; }

		//max=GenericNumber
		public Assignment getMaxAssignment_3() { return cMaxAssignment_3; }

		//GenericNumber
		public RuleCall getMaxGenericNumberParserRuleCall_3_0() { return cMaxGenericNumberParserRuleCall_3_0; }
	}

	public class ValueTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cValueTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeVTypeEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cWithAutoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cWithAutoWITH_AUTOKeyword_2_0 = (Keyword)cWithAutoAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValidValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValidValuesValidValuesParserRuleCall_3_1_0 = (RuleCall)cValidValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSpecialIdParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cMultiValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cMultiValueLeftSquareBracketRightSquareBracketKeyword_5_0 = (Keyword)cMultiValueAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Alternatives cAlternatives_6_1 = (Alternatives)cGroup_6.eContents().get(1);
		private final Assignment cDefaultAutoAssignment_6_1_0 = (Assignment)cAlternatives_6_1.eContents().get(0);
		private final Keyword cDefaultAutoAUTOKeyword_6_1_0_0 = (Keyword)cDefaultAutoAssignment_6_1_0.eContents().get(0);
		private final Assignment cDefaultValueAssignment_6_1_1 = (Assignment)cAlternatives_6_1.eContents().get(1);
		private final Alternatives cDefaultValueAlternatives_6_1_1_0 = (Alternatives)cDefaultValueAssignment_6_1_1.eContents().get(0);
		private final RuleCall cDefaultValueGenericValueParserRuleCall_6_1_1_0_0 = (RuleCall)cDefaultValueAlternatives_6_1_1_0.eContents().get(0);
		private final RuleCall cDefaultValueIDTerminalRuleCall_6_1_1_0_1 = (RuleCall)cDefaultValueAlternatives_6_1_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cDescriptionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cDescriptionAssignment_7_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ValueType:
		//
		//	{ValueType} type=VType withAuto?="WITH_AUTO"? ("[" ValidValues=ValidValues "]")? name=SpecialId multiValue?="[]"?
		//
		//	("=" (=> defaultAuto?="AUTO" | defaultValue=(GenericValue | ID)))? (":" description=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//{ValueType} type=VType withAuto?="WITH_AUTO"? ("[" ValidValues=ValidValues "]")? name=SpecialId multiValue?="[]"? ("="
		//
		//(=> defaultAuto?="AUTO" | defaultValue=(GenericValue | ID)))? (":" description=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//{ValueType}
		public Action getValueTypeAction_0() { return cValueTypeAction_0; }

		//type=VType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//VType
		public RuleCall getTypeVTypeEnumRuleCall_1_0() { return cTypeVTypeEnumRuleCall_1_0; }

		//withAuto?="WITH_AUTO"?
		public Assignment getWithAutoAssignment_2() { return cWithAutoAssignment_2; }

		//"WITH_AUTO"
		public Keyword getWithAutoWITH_AUTOKeyword_2_0() { return cWithAutoWITH_AUTOKeyword_2_0; }

		//("[" ValidValues=ValidValues "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }

		//ValidValues=ValidValues
		public Assignment getValidValuesAssignment_3_1() { return cValidValuesAssignment_3_1; }

		//ValidValues
		public RuleCall getValidValuesValidValuesParserRuleCall_3_1_0() { return cValidValuesValidValuesParserRuleCall_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_2() { return cRightSquareBracketKeyword_3_2; }

		//name=SpecialId
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//SpecialId
		public RuleCall getNameSpecialIdParserRuleCall_4_0() { return cNameSpecialIdParserRuleCall_4_0; }

		//multiValue?="[]"?
		public Assignment getMultiValueAssignment_5() { return cMultiValueAssignment_5; }

		//"[]"
		public Keyword getMultiValueLeftSquareBracketRightSquareBracketKeyword_5_0() { return cMultiValueLeftSquareBracketRightSquareBracketKeyword_5_0; }

		//("=" (=> defaultAuto?="AUTO" | defaultValue=(GenericValue | ID)))?
		public Group getGroup_6() { return cGroup_6; }

		//"="
		public Keyword getEqualsSignKeyword_6_0() { return cEqualsSignKeyword_6_0; }

		//=> defaultAuto?="AUTO" | defaultValue=(GenericValue | ID)
		public Alternatives getAlternatives_6_1() { return cAlternatives_6_1; }

		//=> defaultAuto?="AUTO"
		public Assignment getDefaultAutoAssignment_6_1_0() { return cDefaultAutoAssignment_6_1_0; }

		//"AUTO"
		public Keyword getDefaultAutoAUTOKeyword_6_1_0_0() { return cDefaultAutoAUTOKeyword_6_1_0_0; }

		//defaultValue=(GenericValue | ID)
		public Assignment getDefaultValueAssignment_6_1_1() { return cDefaultValueAssignment_6_1_1; }

		//GenericValue | ID
		public Alternatives getDefaultValueAlternatives_6_1_1_0() { return cDefaultValueAlternatives_6_1_1_0; }

		//GenericValue
		public RuleCall getDefaultValueGenericValueParserRuleCall_6_1_1_0_0() { return cDefaultValueGenericValueParserRuleCall_6_1_1_0_0; }

		//ID
		public RuleCall getDefaultValueIDTerminalRuleCall_6_1_1_0_1() { return cDefaultValueIDTerminalRuleCall_6_1_1_0_1; }

		//(":" description=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//":"
		public Keyword getColonKeyword_7_0() { return cColonKeyword_7_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_7_1() { return cDescriptionAssignment_7_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_7_1_0() { return cDescriptionSTRINGTerminalRuleCall_7_1_0; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class VariantTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VariantType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariantTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeETypeEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cWithAutoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cWithAutoWITH_AUTOKeyword_2_0 = (Keyword)cWithAutoAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Assignment cValuesAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cValuesEnumeratorTypeParserRuleCall_3_1_0_0 = (RuleCall)cValuesAssignment_3_1_0.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cGroup_3_1.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final RuleCall cValuesEnumeratorTypeParserRuleCall_3_1_1_1_0 = (RuleCall)cValuesAssignment_3_1_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSpecialIdParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cMultiValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cMultiValueLeftSquareBracketRightSquareBracketKeyword_5_0 = (Keyword)cMultiValueAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Alternatives cAlternatives_6_1 = (Alternatives)cGroup_6.eContents().get(1);
		private final Assignment cDefaultAutoAssignment_6_1_0 = (Assignment)cAlternatives_6_1.eContents().get(0);
		private final Keyword cDefaultAutoAUTOKeyword_6_1_0_0 = (Keyword)cDefaultAutoAssignment_6_1_0.eContents().get(0);
		private final Assignment cDefaultValueAssignment_6_1_1 = (Assignment)cAlternatives_6_1.eContents().get(1);
		private final RuleCall cDefaultValueIDTerminalRuleCall_6_1_1_0 = (RuleCall)cDefaultValueAssignment_6_1_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cDescriptionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cDescriptionAssignment_7_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//VariantType:
		//
		//	{VariantType} type=EType withAuto?="WITH_AUTO"? ("[" (Values+=EnumeratorType ("," Values+=EnumeratorType)*)? "]")?
		//
		//	name=SpecialId multiValue?="[]"? ("=" (=> defaultAuto?="AUTO" | defaultValue=ID))? (":" description=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//{VariantType} type=EType withAuto?="WITH_AUTO"? ("[" (Values+=EnumeratorType ("," Values+=EnumeratorType)*)? "]")?
		//
		//name=SpecialId multiValue?="[]"? ("=" (=> defaultAuto?="AUTO" | defaultValue=ID))? (":" description=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//{VariantType}
		public Action getVariantTypeAction_0() { return cVariantTypeAction_0; }

		//type=EType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//EType
		public RuleCall getTypeETypeEnumRuleCall_1_0() { return cTypeETypeEnumRuleCall_1_0; }

		//withAuto?="WITH_AUTO"?
		public Assignment getWithAutoAssignment_2() { return cWithAutoAssignment_2; }

		//"WITH_AUTO"
		public Keyword getWithAutoWITH_AUTOKeyword_2_0() { return cWithAutoWITH_AUTOKeyword_2_0; }

		//("[" (Values+=EnumeratorType ("," Values+=EnumeratorType)*)? "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }

		//(Values+=EnumeratorType ("," Values+=EnumeratorType)*)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//Values+=EnumeratorType
		public Assignment getValuesAssignment_3_1_0() { return cValuesAssignment_3_1_0; }

		//EnumeratorType
		public RuleCall getValuesEnumeratorTypeParserRuleCall_3_1_0_0() { return cValuesEnumeratorTypeParserRuleCall_3_1_0_0; }

		//("," Values+=EnumeratorType)*
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }

		//","
		public Keyword getCommaKeyword_3_1_1_0() { return cCommaKeyword_3_1_1_0; }

		//Values+=EnumeratorType
		public Assignment getValuesAssignment_3_1_1_1() { return cValuesAssignment_3_1_1_1; }

		//EnumeratorType
		public RuleCall getValuesEnumeratorTypeParserRuleCall_3_1_1_1_0() { return cValuesEnumeratorTypeParserRuleCall_3_1_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_2() { return cRightSquareBracketKeyword_3_2; }

		//name=SpecialId
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//SpecialId
		public RuleCall getNameSpecialIdParserRuleCall_4_0() { return cNameSpecialIdParserRuleCall_4_0; }

		//multiValue?="[]"?
		public Assignment getMultiValueAssignment_5() { return cMultiValueAssignment_5; }

		//"[]"
		public Keyword getMultiValueLeftSquareBracketRightSquareBracketKeyword_5_0() { return cMultiValueLeftSquareBracketRightSquareBracketKeyword_5_0; }

		//("=" (=> defaultAuto?="AUTO" | defaultValue=ID))?
		public Group getGroup_6() { return cGroup_6; }

		//"="
		public Keyword getEqualsSignKeyword_6_0() { return cEqualsSignKeyword_6_0; }

		//=> defaultAuto?="AUTO" | defaultValue=ID
		public Alternatives getAlternatives_6_1() { return cAlternatives_6_1; }

		//=> defaultAuto?="AUTO"
		public Assignment getDefaultAutoAssignment_6_1_0() { return cDefaultAutoAssignment_6_1_0; }

		//"AUTO"
		public Keyword getDefaultAutoAUTOKeyword_6_1_0_0() { return cDefaultAutoAUTOKeyword_6_1_0_0; }

		//defaultValue=ID
		public Assignment getDefaultValueAssignment_6_1_1() { return cDefaultValueAssignment_6_1_1; }

		//ID
		public RuleCall getDefaultValueIDTerminalRuleCall_6_1_1_0() { return cDefaultValueIDTerminalRuleCall_6_1_1_0; }

		//(":" description=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//":"
		public Keyword getColonKeyword_7_0() { return cColonKeyword_7_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_7_1() { return cDescriptionAssignment_7_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_7_1_0() { return cDescriptionSTRINGTerminalRuleCall_7_1_0; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class EnumeratorTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumeratorType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnumeratorTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSpecialIdParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParametersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParametersParameterTypeParserRuleCall_2_1_0 = (RuleCall)cParametersAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		
		//EnumeratorType:
		//
		//	{EnumeratorType} name=SpecialId ("{" Parameters+=ParameterType* "}")? (":" description=STRING)?;
		public ParserRule getRule() { return rule; }

		//{EnumeratorType} name=SpecialId ("{" Parameters+=ParameterType* "}")? (":" description=STRING)?
		public Group getGroup() { return cGroup; }

		//{EnumeratorType}
		public Action getEnumeratorTypeAction_0() { return cEnumeratorTypeAction_0; }

		//name=SpecialId
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//SpecialId
		public RuleCall getNameSpecialIdParserRuleCall_1_0() { return cNameSpecialIdParserRuleCall_1_0; }

		//("{" Parameters+=ParameterType* "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//Parameters+=ParameterType*
		public Assignment getParametersAssignment_2_1() { return cParametersAssignment_2_1; }

		//ParameterType
		public RuleCall getParametersParameterTypeParserRuleCall_2_1_0() { return cParametersParameterTypeParserRuleCall_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }

		//(":" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_1_0() { return cDescriptionSTRINGTerminalRuleCall_3_1_0; }
	}

	public class ReferenceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferenceTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeObjectTypeRefEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSpecialIdParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cMultiValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cMultiValueLeftSquareBracketRightSquareBracketKeyword_3_0 = (Keyword)cMultiValueAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Assignment cDefaultAutoAssignment_4_1_0 = (Assignment)cAlternatives_4_1.eContents().get(0);
		private final Keyword cDefaultAutoAUTOKeyword_4_1_0_0 = (Keyword)cDefaultAutoAssignment_4_1_0.eContents().get(0);
		private final Assignment cDefaultValueAssignment_4_1_1 = (Assignment)cAlternatives_4_1.eContents().get(1);
		private final RuleCall cDefaultValueIDTerminalRuleCall_4_1_1_0 = (RuleCall)cDefaultValueAssignment_4_1_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDescriptionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cDescriptionAssignment_5_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ReferenceType:
		//
		//	{ReferenceType} type=ObjectTypeRef name=SpecialId multiValue?="[]"? ("=" (=> defaultAuto?="AUTO" | defaultValue=ID))?
		//
		//	(":" description=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//{ReferenceType} type=ObjectTypeRef name=SpecialId multiValue?="[]"? ("=" (=> defaultAuto?="AUTO" | defaultValue=ID))?
		//
		//(":" description=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//{ReferenceType}
		public Action getReferenceTypeAction_0() { return cReferenceTypeAction_0; }

		//type=ObjectTypeRef
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//ObjectTypeRef
		public RuleCall getTypeObjectTypeRefEnumRuleCall_1_0() { return cTypeObjectTypeRefEnumRuleCall_1_0; }

		//name=SpecialId
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//SpecialId
		public RuleCall getNameSpecialIdParserRuleCall_2_0() { return cNameSpecialIdParserRuleCall_2_0; }

		//multiValue?="[]"?
		public Assignment getMultiValueAssignment_3() { return cMultiValueAssignment_3; }

		//"[]"
		public Keyword getMultiValueLeftSquareBracketRightSquareBracketKeyword_3_0() { return cMultiValueLeftSquareBracketRightSquareBracketKeyword_3_0; }

		//("=" (=> defaultAuto?="AUTO" | defaultValue=ID))?
		public Group getGroup_4() { return cGroup_4; }

		//"="
		public Keyword getEqualsSignKeyword_4_0() { return cEqualsSignKeyword_4_0; }

		//=> defaultAuto?="AUTO" | defaultValue=ID
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }

		//=> defaultAuto?="AUTO"
		public Assignment getDefaultAutoAssignment_4_1_0() { return cDefaultAutoAssignment_4_1_0; }

		//"AUTO"
		public Keyword getDefaultAutoAUTOKeyword_4_1_0_0() { return cDefaultAutoAUTOKeyword_4_1_0_0; }

		//defaultValue=ID
		public Assignment getDefaultValueAssignment_4_1_1() { return cDefaultValueAssignment_4_1_1; }

		//ID
		public RuleCall getDefaultValueIDTerminalRuleCall_4_1_1_0() { return cDefaultValueIDTerminalRuleCall_4_1_1_0; }

		//(":" description=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//":"
		public Keyword getColonKeyword_5_0() { return cColonKeyword_5_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_5_1() { return cDescriptionAssignment_5_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_5_1_0() { return cDescriptionSTRINGTerminalRuleCall_5_1_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class OilObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OilObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeObjectTypeEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParametersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_2_1_0 = (RuleCall)cParametersAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//OilObject:
		//
		//	type=ObjectType name=ID ("{" Parameters+=Parameter* "}")? (":" description=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//type=ObjectType name=ID ("{" Parameters+=Parameter* "}")? (":" description=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//type=ObjectType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//ObjectType
		public RuleCall getTypeObjectTypeEnumRuleCall_0_0() { return cTypeObjectTypeEnumRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("{" Parameters+=Parameter* "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//Parameters+=Parameter*
		public Assignment getParametersAssignment_2_1() { return cParametersAssignment_2_1; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_1_0() { return cParametersParameterParserRuleCall_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }

		//(":" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_1_0() { return cDescriptionSTRINGTerminalRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeParameterTypeCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeParameterTypeSpecialIdParserRuleCall_1_0_1 = (RuleCall)cTypeParameterTypeCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cAutoAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final Keyword cAutoAUTOKeyword_3_0_0 = (Keyword)cAutoAssignment_3_0.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cValueGenericValueParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Assignment cValueRefAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final CrossReference cValueRefParameterRefCrossReference_3_2_0 = (CrossReference)cValueRefAssignment_3_2.eContents().get(0);
		private final RuleCall cValueRefParameterRefSpecialIdParserRuleCall_3_2_0_1 = (RuleCall)cValueRefParameterRefCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_4_1_0 = (RuleCall)cParametersAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDescriptionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cDescriptionAssignment_5_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Parameter:
		//
		//	{Parameter} Type=[ParameterType|SpecialId] "=" (=> auto?="AUTO" | value=GenericValue |
		//
		//	ValueRef=[ParameterRef|SpecialId]) ("{" Parameters+=Parameter* "}")? (":" description=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//{Parameter} Type=[ParameterType|SpecialId] "=" (=> auto?="AUTO" | value=GenericValue |
		//
		//ValueRef=[ParameterRef|SpecialId]) ("{" Parameters+=Parameter* "}")? (":" description=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//{Parameter}
		public Action getParameterAction_0() { return cParameterAction_0; }

		//Type=[ParameterType|SpecialId]
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[ParameterType|SpecialId]
		public CrossReference getTypeParameterTypeCrossReference_1_0() { return cTypeParameterTypeCrossReference_1_0; }

		//SpecialId
		public RuleCall getTypeParameterTypeSpecialIdParserRuleCall_1_0_1() { return cTypeParameterTypeSpecialIdParserRuleCall_1_0_1; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//=> auto?="AUTO" | value=GenericValue | ValueRef=[ParameterRef|SpecialId]
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//=> auto?="AUTO"
		public Assignment getAutoAssignment_3_0() { return cAutoAssignment_3_0; }

		//"AUTO"
		public Keyword getAutoAUTOKeyword_3_0_0() { return cAutoAUTOKeyword_3_0_0; }

		//value=GenericValue
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }

		//GenericValue
		public RuleCall getValueGenericValueParserRuleCall_3_1_0() { return cValueGenericValueParserRuleCall_3_1_0; }

		//ValueRef=[ParameterRef|SpecialId]
		public Assignment getValueRefAssignment_3_2() { return cValueRefAssignment_3_2; }

		//[ParameterRef|SpecialId]
		public CrossReference getValueRefParameterRefCrossReference_3_2_0() { return cValueRefParameterRefCrossReference_3_2_0; }

		//SpecialId
		public RuleCall getValueRefParameterRefSpecialIdParserRuleCall_3_2_0_1() { return cValueRefParameterRefSpecialIdParserRuleCall_3_2_0_1; }

		//("{" Parameters+=Parameter* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//Parameters+=Parameter*
		public Assignment getParametersAssignment_4_1() { return cParametersAssignment_4_1; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_4_1_0() { return cParametersParameterParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }

		//(":" description=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//":"
		public Keyword getColonKeyword_5_0() { return cColonKeyword_5_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_5_1() { return cDescriptionAssignment_5_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_5_1_0() { return cDescriptionSTRINGTerminalRuleCall_5_1_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class SpecialIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpecialId");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cSTRINGKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cUINT32Keyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cINT32Keyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cUINT64Keyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cINT64Keyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cFLOATKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cBOOLEANKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cENUMKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cOSKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cALARMKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cAPPMODEKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cCOUNTERKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cCOMKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cEVENTKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cIPDUKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cISRKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cMESSAGEKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		private final Keyword cNETWORKMESSAGEKeyword_18 = (Keyword)cAlternatives.eContents().get(18);
		private final Keyword cNMKeyword_19 = (Keyword)cAlternatives.eContents().get(19);
		private final Keyword cRESOURCEKeyword_20 = (Keyword)cAlternatives.eContents().get(20);
		private final Keyword cTASKKeyword_21 = (Keyword)cAlternatives.eContents().get(21);
		private final Group cGroup_22 = (Group)cAlternatives.eContents().get(22);
		private final Keyword cSPINLOCKKeyword_22_0 = (Keyword)cGroup_22.eContents().get(0);
		private final Keyword cOS_TYPEKeyword_22_1 = (Keyword)cGroup_22.eContents().get(1);
		private final Keyword cALARM_TYPEKeyword_23 = (Keyword)cAlternatives.eContents().get(23);
		private final Keyword cAPPMODE_TYPEKeyword_24 = (Keyword)cAlternatives.eContents().get(24);
		private final Keyword cCOUNTER_TYPEKeyword_25 = (Keyword)cAlternatives.eContents().get(25);
		private final Keyword cCOM_TYPEKeyword_26 = (Keyword)cAlternatives.eContents().get(26);
		private final Keyword cEVENT_TYPEKeyword_27 = (Keyword)cAlternatives.eContents().get(27);
		private final Keyword cIPDU_TYPEKeyword_28 = (Keyword)cAlternatives.eContents().get(28);
		private final Keyword cISR_TYPEKeyword_29 = (Keyword)cAlternatives.eContents().get(29);
		private final Keyword cMESSAGE_TYPEKeyword_30 = (Keyword)cAlternatives.eContents().get(30);
		private final Keyword cNETWORKMESSAGE_TYPEKeyword_31 = (Keyword)cAlternatives.eContents().get(31);
		private final Keyword cNM_TYPEKeyword_32 = (Keyword)cAlternatives.eContents().get(32);
		private final Keyword cRESOURCE_TYPEKeyword_33 = (Keyword)cAlternatives.eContents().get(33);
		private final Keyword cTASK_TYPEKeyword_34 = (Keyword)cAlternatives.eContents().get(34);
		private final Keyword cSPINLOCK_TYPEKeyword_35 = (Keyword)cAlternatives.eContents().get(35);
		
		////	Value | Reference; // | Enumerator | Auto;
		//
		////
		//
		////
		//
		////Value returns Value:
		//
		////	{Value}
		//
		////	Type=[ValueType|ID]
		//
		//////	name=ID
		//
		////	'=' ( => Auto?="AUTO" | => Value=GenericValue )
		//
		////	(':' description=STRING)?
		//
		////	";"
		//
		////;
		//
		////
		//
		////VariantReference returns VariantReference:
		//
		////	{VariantReference}
		//
		////	Type=[ParameterType|ID]
		//
		//////	name=ID
		//
		////	"=" ( => Auto?="AUTO" | Value=[ParameterRef|ID])
		//
		////	(Structured?='{'
		//
		////		(Parameters+=Parameter ( "," Parameters+=Parameter)* )?
		//
		////    '}')?
		//
		////	(':' description=STRING)?
		//
		////	";"
		//
		////;
		//
		/// *
		//
		//Enumerator returns Enumerator:
		//
		//	{Enumerator}
		//
		//	Type=[ParameterType|EString]
		//
		////	name=ID
		//
		//	"=" Value=[EnumeratorType|EString]
		//
		//	('{'
		//
		//		(Parameters+=Parameter ( "," Parameters+=Parameter)* )?
		//
		//    '}')?
		//
		//	(':' description=STRING)?
		//
		//	";"
		//
		//;* / //Reference returns Reference:
		//
		////	{Reference}
		//
		////	Type=[ReferenceType|ID]
		//
		//////	name=ID
		//
		////	'=' (=> Value=[OilObject|ID])
		//
		////	(':' description=STRING)?
		//
		////	";"
		//
		////    ;
		//
		//SpecialId returns ecore::EString:
		//
		//	ID | "STRING" | "UINT32" | "INT32" | "UINT64" | "INT64" | "FLOAT" | "BOOLEAN" | "ENUM" | "OS" | "ALARM" | "APPMODE" |
		//
		//	"COUNTER" | "COM" | "EVENT" | "IPDU" | "ISR" | "MESSAGE" | "NETWORKMESSAGE" | "NM" | "RESOURCE" | "TASK" | "SPINLOCK"
		//
		//	"OS_TYPE" | "ALARM_TYPE" | "APPMODE_TYPE" | "COUNTER_TYPE" | "COM_TYPE" | "EVENT_TYPE" | "IPDU_TYPE" | "ISR_TYPE" |
		//
		//	"MESSAGE_TYPE" | "NETWORKMESSAGE_TYPE" | "NM_TYPE" | "RESOURCE_TYPE" | "TASK_TYPE" | "SPINLOCK_TYPE";
		public ParserRule getRule() { return rule; }

		//ID | "STRING" | "UINT32" | "INT32" | "UINT64" | "INT64" | "FLOAT" | "BOOLEAN" | "ENUM" | "OS" | "ALARM" | "APPMODE" |
		//
		//"COUNTER" | "COM" | "EVENT" | "IPDU" | "ISR" | "MESSAGE" | "NETWORKMESSAGE" | "NM" | "RESOURCE" | "TASK" | "SPINLOCK"
		//
		//"OS_TYPE" | "ALARM_TYPE" | "APPMODE_TYPE" | "COUNTER_TYPE" | "COM_TYPE" | "EVENT_TYPE" | "IPDU_TYPE" | "ISR_TYPE" |
		//
		//"MESSAGE_TYPE" | "NETWORKMESSAGE_TYPE" | "NM_TYPE" | "RESOURCE_TYPE" | "TASK_TYPE" | "SPINLOCK_TYPE"
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//"STRING"
		public Keyword getSTRINGKeyword_1() { return cSTRINGKeyword_1; }

		//"UINT32"
		public Keyword getUINT32Keyword_2() { return cUINT32Keyword_2; }

		//"INT32"
		public Keyword getINT32Keyword_3() { return cINT32Keyword_3; }

		//"UINT64"
		public Keyword getUINT64Keyword_4() { return cUINT64Keyword_4; }

		//"INT64"
		public Keyword getINT64Keyword_5() { return cINT64Keyword_5; }

		//"FLOAT"
		public Keyword getFLOATKeyword_6() { return cFLOATKeyword_6; }

		//"BOOLEAN"
		public Keyword getBOOLEANKeyword_7() { return cBOOLEANKeyword_7; }

		//"ENUM"
		public Keyword getENUMKeyword_8() { return cENUMKeyword_8; }

		//"OS"
		public Keyword getOSKeyword_9() { return cOSKeyword_9; }

		//"ALARM"
		public Keyword getALARMKeyword_10() { return cALARMKeyword_10; }

		//"APPMODE"
		public Keyword getAPPMODEKeyword_11() { return cAPPMODEKeyword_11; }

		//"COUNTER"
		public Keyword getCOUNTERKeyword_12() { return cCOUNTERKeyword_12; }

		//"COM"
		public Keyword getCOMKeyword_13() { return cCOMKeyword_13; }

		//"EVENT"
		public Keyword getEVENTKeyword_14() { return cEVENTKeyword_14; }

		//"IPDU"
		public Keyword getIPDUKeyword_15() { return cIPDUKeyword_15; }

		//"ISR"
		public Keyword getISRKeyword_16() { return cISRKeyword_16; }

		//"MESSAGE"
		public Keyword getMESSAGEKeyword_17() { return cMESSAGEKeyword_17; }

		//"NETWORKMESSAGE"
		public Keyword getNETWORKMESSAGEKeyword_18() { return cNETWORKMESSAGEKeyword_18; }

		//"NM"
		public Keyword getNMKeyword_19() { return cNMKeyword_19; }

		//"RESOURCE"
		public Keyword getRESOURCEKeyword_20() { return cRESOURCEKeyword_20; }

		//"TASK"
		public Keyword getTASKKeyword_21() { return cTASKKeyword_21; }

		//"SPINLOCK" "OS_TYPE"
		public Group getGroup_22() { return cGroup_22; }

		//"SPINLOCK"
		public Keyword getSPINLOCKKeyword_22_0() { return cSPINLOCKKeyword_22_0; }

		//"OS_TYPE"
		public Keyword getOS_TYPEKeyword_22_1() { return cOS_TYPEKeyword_22_1; }

		//"ALARM_TYPE"
		public Keyword getALARM_TYPEKeyword_23() { return cALARM_TYPEKeyword_23; }

		//"APPMODE_TYPE"
		public Keyword getAPPMODE_TYPEKeyword_24() { return cAPPMODE_TYPEKeyword_24; }

		//"COUNTER_TYPE"
		public Keyword getCOUNTER_TYPEKeyword_25() { return cCOUNTER_TYPEKeyword_25; }

		//"COM_TYPE"
		public Keyword getCOM_TYPEKeyword_26() { return cCOM_TYPEKeyword_26; }

		//"EVENT_TYPE"
		public Keyword getEVENT_TYPEKeyword_27() { return cEVENT_TYPEKeyword_27; }

		//"IPDU_TYPE"
		public Keyword getIPDU_TYPEKeyword_28() { return cIPDU_TYPEKeyword_28; }

		//"ISR_TYPE"
		public Keyword getISR_TYPEKeyword_29() { return cISR_TYPEKeyword_29; }

		//"MESSAGE_TYPE"
		public Keyword getMESSAGE_TYPEKeyword_30() { return cMESSAGE_TYPEKeyword_30; }

		//"NETWORKMESSAGE_TYPE"
		public Keyword getNETWORKMESSAGE_TYPEKeyword_31() { return cNETWORKMESSAGE_TYPEKeyword_31; }

		//"NM_TYPE"
		public Keyword getNM_TYPEKeyword_32() { return cNM_TYPEKeyword_32; }

		//"RESOURCE_TYPE"
		public Keyword getRESOURCE_TYPEKeyword_33() { return cRESOURCE_TYPEKeyword_33; }

		//"TASK_TYPE"
		public Keyword getTASK_TYPEKeyword_34() { return cTASK_TYPEKeyword_34; }

		//"SPINLOCK_TYPE"
		public Keyword getSPINLOCK_TYPEKeyword_35() { return cSPINLOCK_TYPEKeyword_35; }
	}

	public class GenericValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GenericValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cINTParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFLOATParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//GenericValue returns ecore::EString:
		//
		//	STRING | INT | FLOAT;
		public ParserRule getRule() { return rule; }

		//STRING | INT | FLOAT
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//INT
		public RuleCall getINTParserRuleCall_1() { return cINTParserRuleCall_1; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_2() { return cFLOATParserRuleCall_2; }
	}

	public class GenericNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GenericNumber");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFLOATParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//GenericNumber returns ecore::EString:
		//
		//	INT | FLOAT;
		public ParserRule getRule() { return rule; }

		//INT | FLOAT
		public Alternatives getAlternatives() { return cAlternatives; }

		//INT
		public RuleCall getINTParserRuleCall_0() { return cINTParserRuleCall_0; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_1() { return cFLOATParserRuleCall_1; }
	}

	public class INTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "INT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cPlusSignKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cNON_ZERO_INTTerminalRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1 = (Alternatives)cGroup_1_0.eContents().get(1);
		private final RuleCall cZERO_INTTerminalRuleCall_1_0_1_0 = (RuleCall)cAlternatives_1_0_1.eContents().get(0);
		private final RuleCall cNON_ZERO_INTTerminalRuleCall_1_0_1_1 = (RuleCall)cAlternatives_1_0_1.eContents().get(1);
		private final RuleCall cZERO_INTTerminalRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		private final RuleCall cHEXTerminalRuleCall_1_2 = (RuleCall)cAlternatives_1.eContents().get(2);
		
		//// Aggiungere la gestione dei numeri esadecimali
		//
		//INT returns ecore::EInt:
		//
		//	("+" | "-")? (NON_ZERO_INT (ZERO_INT | NON_ZERO_INT)* | ZERO_INT | HEX);
		public ParserRule getRule() { return rule; }

		//("+" | "-")? (NON_ZERO_INT (ZERO_INT | NON_ZERO_INT)* | ZERO_INT | HEX)
		public Group getGroup() { return cGroup; }

		//("+" | "-")?
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"+"
		public Keyword getPlusSignKeyword_0_0() { return cPlusSignKeyword_0_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_0_1() { return cHyphenMinusKeyword_0_1; }

		//NON_ZERO_INT (ZERO_INT | NON_ZERO_INT)* | ZERO_INT | HEX
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//NON_ZERO_INT (ZERO_INT | NON_ZERO_INT)*
		public Group getGroup_1_0() { return cGroup_1_0; }

		//NON_ZERO_INT
		public RuleCall getNON_ZERO_INTTerminalRuleCall_1_0_0() { return cNON_ZERO_INTTerminalRuleCall_1_0_0; }

		//(ZERO_INT | NON_ZERO_INT)*
		public Alternatives getAlternatives_1_0_1() { return cAlternatives_1_0_1; }

		//ZERO_INT
		public RuleCall getZERO_INTTerminalRuleCall_1_0_1_0() { return cZERO_INTTerminalRuleCall_1_0_1_0; }

		//NON_ZERO_INT
		public RuleCall getNON_ZERO_INTTerminalRuleCall_1_0_1_1() { return cNON_ZERO_INTTerminalRuleCall_1_0_1_1; }

		//ZERO_INT
		public RuleCall getZERO_INTTerminalRuleCall_1_1() { return cZERO_INTTerminalRuleCall_1_1; }

		//HEX
		public RuleCall getHEXTerminalRuleCall_1_2() { return cHEXTerminalRuleCall_1_2; }
	}

	public class FLOATElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FLOAT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cPlusSignKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cZERO_INTTerminalRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cNON_ZERO_INTTerminalRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1 = (Alternatives)cGroup_1_1.eContents().get(1);
		private final RuleCall cZERO_INTTerminalRuleCall_1_1_1_0 = (RuleCall)cAlternatives_1_1_1.eContents().get(0);
		private final RuleCall cNON_ZERO_INTTerminalRuleCall_1_1_1_1 = (RuleCall)cAlternatives_1_1_1.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final RuleCall cZERO_INTTerminalRuleCall_3_0 = (RuleCall)cAlternatives_3.eContents().get(0);
		private final RuleCall cNON_ZERO_INTTerminalRuleCall_3_1 = (RuleCall)cAlternatives_3.eContents().get(1);
		
		//FLOAT returns ecore::EFloat:
		//
		//	("+" | "-")? (ZERO_INT | NON_ZERO_INT (ZERO_INT | NON_ZERO_INT)*) => "." (ZERO_INT | NON_ZERO_INT)+;
		public ParserRule getRule() { return rule; }

		//("+" | "-")? (ZERO_INT | NON_ZERO_INT (ZERO_INT | NON_ZERO_INT)*) => "." (ZERO_INT | NON_ZERO_INT)+
		public Group getGroup() { return cGroup; }

		//("+" | "-")?
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"+"
		public Keyword getPlusSignKeyword_0_0() { return cPlusSignKeyword_0_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_0_1() { return cHyphenMinusKeyword_0_1; }

		//ZERO_INT | NON_ZERO_INT (ZERO_INT | NON_ZERO_INT)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//ZERO_INT
		public RuleCall getZERO_INTTerminalRuleCall_1_0() { return cZERO_INTTerminalRuleCall_1_0; }

		//NON_ZERO_INT (ZERO_INT | NON_ZERO_INT)*
		public Group getGroup_1_1() { return cGroup_1_1; }

		//NON_ZERO_INT
		public RuleCall getNON_ZERO_INTTerminalRuleCall_1_1_0() { return cNON_ZERO_INTTerminalRuleCall_1_1_0; }

		//(ZERO_INT | NON_ZERO_INT)*
		public Alternatives getAlternatives_1_1_1() { return cAlternatives_1_1_1; }

		//ZERO_INT
		public RuleCall getZERO_INTTerminalRuleCall_1_1_1_0() { return cZERO_INTTerminalRuleCall_1_1_1_0; }

		//NON_ZERO_INT
		public RuleCall getNON_ZERO_INTTerminalRuleCall_1_1_1_1() { return cNON_ZERO_INTTerminalRuleCall_1_1_1_1; }

		//=> "."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//(ZERO_INT | NON_ZERO_INT)+
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//ZERO_INT
		public RuleCall getZERO_INTTerminalRuleCall_3_0() { return cZERO_INTTerminalRuleCall_3_0; }

		//NON_ZERO_INT
		public RuleCall getNON_ZERO_INTTerminalRuleCall_3_1() { return cNON_ZERO_INTTerminalRuleCall_3_1; }
	}
	
	
	public class VTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "VType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTRINGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTRINGSTRINGKeyword_0_0 = (Keyword)cSTRINGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cUINT32EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cUINT32UINT32Keyword_1_0 = (Keyword)cUINT32EnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cINT32EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cINT32INT32Keyword_2_0 = (Keyword)cINT32EnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cUINT64EnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cUINT64UINT64Keyword_3_0 = (Keyword)cUINT64EnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cINT64EnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cINT64INT64Keyword_4_0 = (Keyword)cINT64EnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cFLOATEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cFLOATFLOATKeyword_5_0 = (Keyword)cFLOATEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum VType:
		//
		//	STRING | UINT32 | INT32 | UINT64 | INT64 | FLOAT;
		public EnumRule getRule() { return rule; }

		//STRING | UINT32 | INT32 | UINT64 | INT64 | FLOAT
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public EnumLiteralDeclaration getSTRINGEnumLiteralDeclaration_0() { return cSTRINGEnumLiteralDeclaration_0; }

		//"STRING"
		public Keyword getSTRINGSTRINGKeyword_0_0() { return cSTRINGSTRINGKeyword_0_0; }

		//UINT32
		public EnumLiteralDeclaration getUINT32EnumLiteralDeclaration_1() { return cUINT32EnumLiteralDeclaration_1; }

		//"UINT32"
		public Keyword getUINT32UINT32Keyword_1_0() { return cUINT32UINT32Keyword_1_0; }

		//INT32
		public EnumLiteralDeclaration getINT32EnumLiteralDeclaration_2() { return cINT32EnumLiteralDeclaration_2; }

		//"INT32"
		public Keyword getINT32INT32Keyword_2_0() { return cINT32INT32Keyword_2_0; }

		//UINT64
		public EnumLiteralDeclaration getUINT64EnumLiteralDeclaration_3() { return cUINT64EnumLiteralDeclaration_3; }

		//"UINT64"
		public Keyword getUINT64UINT64Keyword_3_0() { return cUINT64UINT64Keyword_3_0; }

		//INT64
		public EnumLiteralDeclaration getINT64EnumLiteralDeclaration_4() { return cINT64EnumLiteralDeclaration_4; }

		//"INT64"
		public Keyword getINT64INT64Keyword_4_0() { return cINT64INT64Keyword_4_0; }

		//FLOAT
		public EnumLiteralDeclaration getFLOATEnumLiteralDeclaration_5() { return cFLOATEnumLiteralDeclaration_5; }

		//"FLOAT"
		public Keyword getFLOATFLOATKeyword_5_0() { return cFLOATFLOATKeyword_5_0; }
	}

	public class ETypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "EType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBOOLEANEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBOOLEANBOOLEANKeyword_0_0 = (Keyword)cBOOLEANEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cENUMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cENUMENUMKeyword_1_0 = (Keyword)cENUMEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum EType:
		//
		//	BOOLEAN | ENUM;
		public EnumRule getRule() { return rule; }

		//BOOLEAN | ENUM
		public Alternatives getAlternatives() { return cAlternatives; }

		//BOOLEAN
		public EnumLiteralDeclaration getBOOLEANEnumLiteralDeclaration_0() { return cBOOLEANEnumLiteralDeclaration_0; }

		//"BOOLEAN"
		public Keyword getBOOLEANBOOLEANKeyword_0_0() { return cBOOLEANBOOLEANKeyword_0_0; }

		//ENUM
		public EnumLiteralDeclaration getENUMEnumLiteralDeclaration_1() { return cENUMEnumLiteralDeclaration_1; }

		//"ENUM"
		public Keyword getENUMENUMKeyword_1_0() { return cENUMENUMKeyword_1_0; }
	}

	public class ObjectTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOSOSKeyword_0_0 = (Keyword)cOSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cALARMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cALARMALARMKeyword_1_0 = (Keyword)cALARMEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAPPMODEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAPPMODEAPPMODEKeyword_2_0 = (Keyword)cAPPMODEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCOUNTEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCOUNTERCOUNTERKeyword_3_0 = (Keyword)cCOUNTEREnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCOMEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCOMCOMKeyword_4_0 = (Keyword)cCOMEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cEVENTEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cEVENTEVENTKeyword_5_0 = (Keyword)cEVENTEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cIPDUEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cIPDUIPDUKeyword_6_0 = (Keyword)cIPDUEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cISREnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cISRISRKeyword_7_0 = (Keyword)cISREnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cMESSAGEEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cMESSAGEMESSAGEKeyword_8_0 = (Keyword)cMESSAGEEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cNETWORKMESSAGEEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cNETWORKMESSAGENETWORKMESSAGEKeyword_9_0 = (Keyword)cNETWORKMESSAGEEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cNMEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cNMNMKeyword_10_0 = (Keyword)cNMEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cRESOURCEEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cRESOURCERESOURCEKeyword_11_0 = (Keyword)cRESOURCEEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cTASKEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cTASKTASKKeyword_12_0 = (Keyword)cTASKEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cAPPLICATIONEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cAPPLICATIONAPPLICATIONKeyword_13_0 = (Keyword)cAPPLICATIONEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cSPINLOCKEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cSPINLOCKSPINLOCKKeyword_14_0 = (Keyword)cSPINLOCKEnumLiteralDeclaration_14.eContents().get(0);
		
		//enum ObjectType:
		//
		//	OS | ALARM | APPMODE | COUNTER | COM | EVENT | IPDU | ISR | MESSAGE | NETWORKMESSAGE | NM | RESOURCE | TASK |
		//
		//	APPLICATION | SPINLOCK;
		public EnumRule getRule() { return rule; }

		//OS | ALARM | APPMODE | COUNTER | COM | EVENT | IPDU | ISR | MESSAGE | NETWORKMESSAGE | NM | RESOURCE | TASK |
		//
		//APPLICATION | SPINLOCK
		public Alternatives getAlternatives() { return cAlternatives; }

		//OS
		public EnumLiteralDeclaration getOSEnumLiteralDeclaration_0() { return cOSEnumLiteralDeclaration_0; }

		//"OS"
		public Keyword getOSOSKeyword_0_0() { return cOSOSKeyword_0_0; }

		//ALARM
		public EnumLiteralDeclaration getALARMEnumLiteralDeclaration_1() { return cALARMEnumLiteralDeclaration_1; }

		//"ALARM"
		public Keyword getALARMALARMKeyword_1_0() { return cALARMALARMKeyword_1_0; }

		//APPMODE
		public EnumLiteralDeclaration getAPPMODEEnumLiteralDeclaration_2() { return cAPPMODEEnumLiteralDeclaration_2; }

		//"APPMODE"
		public Keyword getAPPMODEAPPMODEKeyword_2_0() { return cAPPMODEAPPMODEKeyword_2_0; }

		//COUNTER
		public EnumLiteralDeclaration getCOUNTEREnumLiteralDeclaration_3() { return cCOUNTEREnumLiteralDeclaration_3; }

		//"COUNTER"
		public Keyword getCOUNTERCOUNTERKeyword_3_0() { return cCOUNTERCOUNTERKeyword_3_0; }

		//COM
		public EnumLiteralDeclaration getCOMEnumLiteralDeclaration_4() { return cCOMEnumLiteralDeclaration_4; }

		//"COM"
		public Keyword getCOMCOMKeyword_4_0() { return cCOMCOMKeyword_4_0; }

		//EVENT
		public EnumLiteralDeclaration getEVENTEnumLiteralDeclaration_5() { return cEVENTEnumLiteralDeclaration_5; }

		//"EVENT"
		public Keyword getEVENTEVENTKeyword_5_0() { return cEVENTEVENTKeyword_5_0; }

		//IPDU
		public EnumLiteralDeclaration getIPDUEnumLiteralDeclaration_6() { return cIPDUEnumLiteralDeclaration_6; }

		//"IPDU"
		public Keyword getIPDUIPDUKeyword_6_0() { return cIPDUIPDUKeyword_6_0; }

		//ISR
		public EnumLiteralDeclaration getISREnumLiteralDeclaration_7() { return cISREnumLiteralDeclaration_7; }

		//"ISR"
		public Keyword getISRISRKeyword_7_0() { return cISRISRKeyword_7_0; }

		//MESSAGE
		public EnumLiteralDeclaration getMESSAGEEnumLiteralDeclaration_8() { return cMESSAGEEnumLiteralDeclaration_8; }

		//"MESSAGE"
		public Keyword getMESSAGEMESSAGEKeyword_8_0() { return cMESSAGEMESSAGEKeyword_8_0; }

		//NETWORKMESSAGE
		public EnumLiteralDeclaration getNETWORKMESSAGEEnumLiteralDeclaration_9() { return cNETWORKMESSAGEEnumLiteralDeclaration_9; }

		//"NETWORKMESSAGE"
		public Keyword getNETWORKMESSAGENETWORKMESSAGEKeyword_9_0() { return cNETWORKMESSAGENETWORKMESSAGEKeyword_9_0; }

		//NM
		public EnumLiteralDeclaration getNMEnumLiteralDeclaration_10() { return cNMEnumLiteralDeclaration_10; }

		//"NM"
		public Keyword getNMNMKeyword_10_0() { return cNMNMKeyword_10_0; }

		//RESOURCE
		public EnumLiteralDeclaration getRESOURCEEnumLiteralDeclaration_11() { return cRESOURCEEnumLiteralDeclaration_11; }

		//"RESOURCE"
		public Keyword getRESOURCERESOURCEKeyword_11_0() { return cRESOURCERESOURCEKeyword_11_0; }

		//TASK
		public EnumLiteralDeclaration getTASKEnumLiteralDeclaration_12() { return cTASKEnumLiteralDeclaration_12; }

		//"TASK"
		public Keyword getTASKTASKKeyword_12_0() { return cTASKTASKKeyword_12_0; }

		//APPLICATION
		public EnumLiteralDeclaration getAPPLICATIONEnumLiteralDeclaration_13() { return cAPPLICATIONEnumLiteralDeclaration_13; }

		//"APPLICATION"
		public Keyword getAPPLICATIONAPPLICATIONKeyword_13_0() { return cAPPLICATIONAPPLICATIONKeyword_13_0; }

		//SPINLOCK
		public EnumLiteralDeclaration getSPINLOCKEnumLiteralDeclaration_14() { return cSPINLOCKEnumLiteralDeclaration_14; }

		//"SPINLOCK"
		public Keyword getSPINLOCKSPINLOCKKeyword_14_0() { return cSPINLOCKSPINLOCKKeyword_14_0; }
	}

	public class ObjectTypeRefElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectTypeRef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOSOS_TYPEKeyword_0_0 = (Keyword)cOSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cALARMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cALARMALARM_TYPEKeyword_1_0 = (Keyword)cALARMEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAPPMODEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAPPMODEAPPMODE_TYPEKeyword_2_0 = (Keyword)cAPPMODEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCOUNTEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCOUNTERCOUNTER_TYPEKeyword_3_0 = (Keyword)cCOUNTEREnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCOMEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCOMCOM_TYPEKeyword_4_0 = (Keyword)cCOMEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cEVENTEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cEVENTEVENT_TYPEKeyword_5_0 = (Keyword)cEVENTEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cIPDUEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cIPDUIPDU_TYPEKeyword_6_0 = (Keyword)cIPDUEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cISREnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cISRISR_TYPEKeyword_7_0 = (Keyword)cISREnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cMESSAGEEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cMESSAGEMESSAGE_TYPEKeyword_8_0 = (Keyword)cMESSAGEEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cNETWORKMESSAGEEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cNETWORKMESSAGENETWORKMESSAGE_TYPEKeyword_9_0 = (Keyword)cNETWORKMESSAGEEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cNMEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cNMNM_TYPEKeyword_10_0 = (Keyword)cNMEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cRESOURCEEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cRESOURCERESOURCE_TYPEKeyword_11_0 = (Keyword)cRESOURCEEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cTASKEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cTASKTASK_TYPEKeyword_12_0 = (Keyword)cTASKEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cAPPLICATIONEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cAPPLICATIONAPPLICATION_TYPEKeyword_13_0 = (Keyword)cAPPLICATIONEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cSPINLOCKEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cSPINLOCKSPINLOCK_TYPEKeyword_14_0 = (Keyword)cSPINLOCKEnumLiteralDeclaration_14.eContents().get(0);
		
		//enum ObjectTypeRef returns ObjectType:
		//
		//	OS="OS_TYPE" | ALARM="ALARM_TYPE" | APPMODE="APPMODE_TYPE" | COUNTER="COUNTER_TYPE" | COM="COM_TYPE" |
		//
		//	EVENT="EVENT_TYPE" | IPDU="IPDU_TYPE" | ISR="ISR_TYPE" | MESSAGE="MESSAGE_TYPE" |
		//
		//	NETWORKMESSAGE="NETWORKMESSAGE_TYPE" | NM="NM_TYPE" | RESOURCE="RESOURCE_TYPE" | TASK="TASK_TYPE" |
		//
		//	APPLICATION="APPLICATION_TYPE" | SPINLOCK="SPINLOCK_TYPE";
		public EnumRule getRule() { return rule; }

		//OS="OS_TYPE" | ALARM="ALARM_TYPE" | APPMODE="APPMODE_TYPE" | COUNTER="COUNTER_TYPE" | COM="COM_TYPE" |
		//
		//EVENT="EVENT_TYPE" | IPDU="IPDU_TYPE" | ISR="ISR_TYPE" | MESSAGE="MESSAGE_TYPE" | NETWORKMESSAGE="NETWORKMESSAGE_TYPE"
		//
		//| NM="NM_TYPE" | RESOURCE="RESOURCE_TYPE" | TASK="TASK_TYPE" | APPLICATION="APPLICATION_TYPE" |
		//
		//SPINLOCK="SPINLOCK_TYPE"
		public Alternatives getAlternatives() { return cAlternatives; }

		//OS="OS_TYPE"
		public EnumLiteralDeclaration getOSEnumLiteralDeclaration_0() { return cOSEnumLiteralDeclaration_0; }

		//"OS_TYPE"
		public Keyword getOSOS_TYPEKeyword_0_0() { return cOSOS_TYPEKeyword_0_0; }

		//ALARM="ALARM_TYPE"
		public EnumLiteralDeclaration getALARMEnumLiteralDeclaration_1() { return cALARMEnumLiteralDeclaration_1; }

		//"ALARM_TYPE"
		public Keyword getALARMALARM_TYPEKeyword_1_0() { return cALARMALARM_TYPEKeyword_1_0; }

		//APPMODE="APPMODE_TYPE"
		public EnumLiteralDeclaration getAPPMODEEnumLiteralDeclaration_2() { return cAPPMODEEnumLiteralDeclaration_2; }

		//"APPMODE_TYPE"
		public Keyword getAPPMODEAPPMODE_TYPEKeyword_2_0() { return cAPPMODEAPPMODE_TYPEKeyword_2_0; }

		//COUNTER="COUNTER_TYPE"
		public EnumLiteralDeclaration getCOUNTEREnumLiteralDeclaration_3() { return cCOUNTEREnumLiteralDeclaration_3; }

		//"COUNTER_TYPE"
		public Keyword getCOUNTERCOUNTER_TYPEKeyword_3_0() { return cCOUNTERCOUNTER_TYPEKeyword_3_0; }

		//COM="COM_TYPE"
		public EnumLiteralDeclaration getCOMEnumLiteralDeclaration_4() { return cCOMEnumLiteralDeclaration_4; }

		//"COM_TYPE"
		public Keyword getCOMCOM_TYPEKeyword_4_0() { return cCOMCOM_TYPEKeyword_4_0; }

		//EVENT="EVENT_TYPE"
		public EnumLiteralDeclaration getEVENTEnumLiteralDeclaration_5() { return cEVENTEnumLiteralDeclaration_5; }

		//"EVENT_TYPE"
		public Keyword getEVENTEVENT_TYPEKeyword_5_0() { return cEVENTEVENT_TYPEKeyword_5_0; }

		//IPDU="IPDU_TYPE"
		public EnumLiteralDeclaration getIPDUEnumLiteralDeclaration_6() { return cIPDUEnumLiteralDeclaration_6; }

		//"IPDU_TYPE"
		public Keyword getIPDUIPDU_TYPEKeyword_6_0() { return cIPDUIPDU_TYPEKeyword_6_0; }

		//ISR="ISR_TYPE"
		public EnumLiteralDeclaration getISREnumLiteralDeclaration_7() { return cISREnumLiteralDeclaration_7; }

		//"ISR_TYPE"
		public Keyword getISRISR_TYPEKeyword_7_0() { return cISRISR_TYPEKeyword_7_0; }

		//MESSAGE="MESSAGE_TYPE"
		public EnumLiteralDeclaration getMESSAGEEnumLiteralDeclaration_8() { return cMESSAGEEnumLiteralDeclaration_8; }

		//"MESSAGE_TYPE"
		public Keyword getMESSAGEMESSAGE_TYPEKeyword_8_0() { return cMESSAGEMESSAGE_TYPEKeyword_8_0; }

		//NETWORKMESSAGE="NETWORKMESSAGE_TYPE"
		public EnumLiteralDeclaration getNETWORKMESSAGEEnumLiteralDeclaration_9() { return cNETWORKMESSAGEEnumLiteralDeclaration_9; }

		//"NETWORKMESSAGE_TYPE"
		public Keyword getNETWORKMESSAGENETWORKMESSAGE_TYPEKeyword_9_0() { return cNETWORKMESSAGENETWORKMESSAGE_TYPEKeyword_9_0; }

		//NM="NM_TYPE"
		public EnumLiteralDeclaration getNMEnumLiteralDeclaration_10() { return cNMEnumLiteralDeclaration_10; }

		//"NM_TYPE"
		public Keyword getNMNM_TYPEKeyword_10_0() { return cNMNM_TYPEKeyword_10_0; }

		//RESOURCE="RESOURCE_TYPE"
		public EnumLiteralDeclaration getRESOURCEEnumLiteralDeclaration_11() { return cRESOURCEEnumLiteralDeclaration_11; }

		//"RESOURCE_TYPE"
		public Keyword getRESOURCERESOURCE_TYPEKeyword_11_0() { return cRESOURCERESOURCE_TYPEKeyword_11_0; }

		//TASK="TASK_TYPE"
		public EnumLiteralDeclaration getTASKEnumLiteralDeclaration_12() { return cTASKEnumLiteralDeclaration_12; }

		//"TASK_TYPE"
		public Keyword getTASKTASK_TYPEKeyword_12_0() { return cTASKTASK_TYPEKeyword_12_0; }

		//APPLICATION="APPLICATION_TYPE"
		public EnumLiteralDeclaration getAPPLICATIONEnumLiteralDeclaration_13() { return cAPPLICATIONEnumLiteralDeclaration_13; }

		//"APPLICATION_TYPE"
		public Keyword getAPPLICATIONAPPLICATION_TYPEKeyword_13_0() { return cAPPLICATIONAPPLICATION_TYPEKeyword_13_0; }

		//SPINLOCK="SPINLOCK_TYPE"
		public EnumLiteralDeclaration getSPINLOCKEnumLiteralDeclaration_14() { return cSPINLOCKEnumLiteralDeclaration_14; }

		//"SPINLOCK_TYPE"
		public Keyword getSPINLOCKSPINLOCK_TYPEKeyword_14_0() { return cSPINLOCKSPINLOCK_TYPEKeyword_14_0; }
	}
	
	private OilFileElements pOilFile;
	private OilImplementationElements pOilImplementation;
	private OilObjectImplElements pOilObjectImpl;
	private OilApplicationElements pOilApplication;
	private ParameterTypeElements pParameterType;
	private ValidValuesElements pValidValues;
	private ValueListElements pValueList;
	private RangeElements pRange;
	private ValueTypeElements pValueType;
	private VariantTypeElements pVariantType;
	private EnumeratorTypeElements pEnumeratorType;
	private ReferenceTypeElements pReferenceType;
	private OilObjectElements pOilObject;
	private ParameterElements pParameter;
	private SpecialIdElements pSpecialId;
	private VTypeElements unknownRuleVType;
	private ETypeElements unknownRuleEType;
	private GenericValueElements pGenericValue;
	private GenericNumberElements pGenericNumber;
	private ObjectTypeElements unknownRuleObjectType;
	private ObjectTypeRefElements unknownRuleObjectTypeRef;
	private INTElements pINT;
	private FLOATElements pFLOAT;
	private TerminalRule tID;
	private TerminalRule tHEX;
	private TerminalRule tNON_ZERO_INT;
	private TerminalRule tZERO_INT;
	private TerminalRule tSTRING;
	private TerminalRule tML_COMMENT;
	private TerminalRule tSL_COMMENT;
	private TerminalRule tINCLUDE;
	private TerminalRule tWS;
	private TerminalRule tANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public OilGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.eu.evidence.rtdruid.oil.xtext.Oil".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//OilFile:
	//
	//	{OilFile} ("OIL_VERSION" "=" oilVersion=STRING ";")? Implementation=OilImplementation? Application=OilApplication?;
	public OilFileElements getOilFileAccess() {
		return (pOilFile != null) ? pOilFile : (pOilFile = new OilFileElements());
	}
	
	public ParserRule getOilFileRule() {
		return getOilFileAccess().getRule();
	}

	//// (":" description=STRING)? 
	//
	//OilImplementation:
	//
	//	"IMPLEMENTATION" name=ID "{" OilObjects+=OilObjectImpl* "}" ";";
	public OilImplementationElements getOilImplementationAccess() {
		return (pOilImplementation != null) ? pOilImplementation : (pOilImplementation = new OilImplementationElements());
	}
	
	public ParserRule getOilImplementationRule() {
		return getOilImplementationAccess().getRule();
	}

	//OilObjectImpl:
	//
	//	type=ObjectType "{" Parameters+=ParameterType* "}" (":" description=STRING)? ";";
	public OilObjectImplElements getOilObjectImplAccess() {
		return (pOilObjectImpl != null) ? pOilObjectImpl : (pOilObjectImpl = new OilObjectImplElements());
	}
	
	public ParserRule getOilObjectImplRule() {
		return getOilObjectImplAccess().getRule();
	}

	//OilApplication:
	//
	//	"CPU" name=ID "{" OilObjects+=OilObject* "}" (":" description=STRING)? ";";
	public OilApplicationElements getOilApplicationAccess() {
		return (pOilApplication != null) ? pOilApplication : (pOilApplication = new OilApplicationElements());
	}
	
	public ParserRule getOilApplicationRule() {
		return getOilApplicationAccess().getRule();
	}

	//ParameterType:
	//
	//	ValueType | VariantType | ReferenceType;
	public ParameterTypeElements getParameterTypeAccess() {
		return (pParameterType != null) ? pParameterType : (pParameterType = new ParameterTypeElements());
	}
	
	public ParserRule getParameterTypeRule() {
		return getParameterTypeAccess().getRule();
	}

	//ValidValues:
	//
	//	Range | ValueList;
	public ValidValuesElements getValidValuesAccess() {
		return (pValidValues != null) ? pValidValues : (pValidValues = new ValidValuesElements());
	}
	
	public ParserRule getValidValuesRule() {
		return getValidValuesAccess().getRule();
	}

	//ValueList:
	//
	//	{ValueList} values+=GenericNumber ("," values+=GenericNumber)*;
	public ValueListElements getValueListAccess() {
		return (pValueList != null) ? pValueList : (pValueList = new ValueListElements());
	}
	
	public ParserRule getValueListRule() {
		return getValueListAccess().getRule();
	}

	//Range:
	//
	//	{Range} min=GenericNumber ".." max=GenericNumber;
	public RangeElements getRangeAccess() {
		return (pRange != null) ? pRange : (pRange = new RangeElements());
	}
	
	public ParserRule getRangeRule() {
		return getRangeAccess().getRule();
	}

	//ValueType:
	//
	//	{ValueType} type=VType withAuto?="WITH_AUTO"? ("[" ValidValues=ValidValues "]")? name=SpecialId multiValue?="[]"?
	//
	//	("=" (=> defaultAuto?="AUTO" | defaultValue=(GenericValue | ID)))? (":" description=STRING)? ";";
	public ValueTypeElements getValueTypeAccess() {
		return (pValueType != null) ? pValueType : (pValueType = new ValueTypeElements());
	}
	
	public ParserRule getValueTypeRule() {
		return getValueTypeAccess().getRule();
	}

	//VariantType:
	//
	//	{VariantType} type=EType withAuto?="WITH_AUTO"? ("[" (Values+=EnumeratorType ("," Values+=EnumeratorType)*)? "]")?
	//
	//	name=SpecialId multiValue?="[]"? ("=" (=> defaultAuto?="AUTO" | defaultValue=ID))? (":" description=STRING)? ";";
	public VariantTypeElements getVariantTypeAccess() {
		return (pVariantType != null) ? pVariantType : (pVariantType = new VariantTypeElements());
	}
	
	public ParserRule getVariantTypeRule() {
		return getVariantTypeAccess().getRule();
	}

	//EnumeratorType:
	//
	//	{EnumeratorType} name=SpecialId ("{" Parameters+=ParameterType* "}")? (":" description=STRING)?;
	public EnumeratorTypeElements getEnumeratorTypeAccess() {
		return (pEnumeratorType != null) ? pEnumeratorType : (pEnumeratorType = new EnumeratorTypeElements());
	}
	
	public ParserRule getEnumeratorTypeRule() {
		return getEnumeratorTypeAccess().getRule();
	}

	//ReferenceType:
	//
	//	{ReferenceType} type=ObjectTypeRef name=SpecialId multiValue?="[]"? ("=" (=> defaultAuto?="AUTO" | defaultValue=ID))?
	//
	//	(":" description=STRING)? ";";
	public ReferenceTypeElements getReferenceTypeAccess() {
		return (pReferenceType != null) ? pReferenceType : (pReferenceType = new ReferenceTypeElements());
	}
	
	public ParserRule getReferenceTypeRule() {
		return getReferenceTypeAccess().getRule();
	}

	//OilObject:
	//
	//	type=ObjectType name=ID ("{" Parameters+=Parameter* "}")? (":" description=STRING)? ";";
	public OilObjectElements getOilObjectAccess() {
		return (pOilObject != null) ? pOilObject : (pOilObject = new OilObjectElements());
	}
	
	public ParserRule getOilObjectRule() {
		return getOilObjectAccess().getRule();
	}

	//Parameter:
	//
	//	{Parameter} Type=[ParameterType|SpecialId] "=" (=> auto?="AUTO" | value=GenericValue |
	//
	//	ValueRef=[ParameterRef|SpecialId]) ("{" Parameters+=Parameter* "}")? (":" description=STRING)? ";";
	public ParameterElements getParameterAccess() {
		return (pParameter != null) ? pParameter : (pParameter = new ParameterElements());
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	////	Value | Reference; // | Enumerator | Auto;
	//
	////
	//
	////
	//
	////Value returns Value:
	//
	////	{Value}
	//
	////	Type=[ValueType|ID]
	//
	//////	name=ID
	//
	////	'=' ( => Auto?="AUTO" | => Value=GenericValue )
	//
	////	(':' description=STRING)?
	//
	////	";"
	//
	////;
	//
	////
	//
	////VariantReference returns VariantReference:
	//
	////	{VariantReference}
	//
	////	Type=[ParameterType|ID]
	//
	//////	name=ID
	//
	////	"=" ( => Auto?="AUTO" | Value=[ParameterRef|ID])
	//
	////	(Structured?='{'
	//
	////		(Parameters+=Parameter ( "," Parameters+=Parameter)* )?
	//
	////    '}')?
	//
	////	(':' description=STRING)?
	//
	////	";"
	//
	////;
	//
	/// *
	//
	//Enumerator returns Enumerator:
	//
	//	{Enumerator}
	//
	//	Type=[ParameterType|EString]
	//
	////	name=ID
	//
	//	"=" Value=[EnumeratorType|EString]
	//
	//	('{'
	//
	//		(Parameters+=Parameter ( "," Parameters+=Parameter)* )?
	//
	//    '}')?
	//
	//	(':' description=STRING)?
	//
	//	";"
	//
	//;* / //Reference returns Reference:
	//
	////	{Reference}
	//
	////	Type=[ReferenceType|ID]
	//
	//////	name=ID
	//
	////	'=' (=> Value=[OilObject|ID])
	//
	////	(':' description=STRING)?
	//
	////	";"
	//
	////    ;
	//
	//SpecialId returns ecore::EString:
	//
	//	ID | "STRING" | "UINT32" | "INT32" | "UINT64" | "INT64" | "FLOAT" | "BOOLEAN" | "ENUM" | "OS" | "ALARM" | "APPMODE" |
	//
	//	"COUNTER" | "COM" | "EVENT" | "IPDU" | "ISR" | "MESSAGE" | "NETWORKMESSAGE" | "NM" | "RESOURCE" | "TASK" | "SPINLOCK"
	//
	//	"OS_TYPE" | "ALARM_TYPE" | "APPMODE_TYPE" | "COUNTER_TYPE" | "COM_TYPE" | "EVENT_TYPE" | "IPDU_TYPE" | "ISR_TYPE" |
	//
	//	"MESSAGE_TYPE" | "NETWORKMESSAGE_TYPE" | "NM_TYPE" | "RESOURCE_TYPE" | "TASK_TYPE" | "SPINLOCK_TYPE";
	public SpecialIdElements getSpecialIdAccess() {
		return (pSpecialId != null) ? pSpecialId : (pSpecialId = new SpecialIdElements());
	}
	
	public ParserRule getSpecialIdRule() {
		return getSpecialIdAccess().getRule();
	}

	//enum VType:
	//
	//	STRING | UINT32 | INT32 | UINT64 | INT64 | FLOAT;
	public VTypeElements getVTypeAccess() {
		return (unknownRuleVType != null) ? unknownRuleVType : (unknownRuleVType = new VTypeElements());
	}
	
	public EnumRule getVTypeRule() {
		return getVTypeAccess().getRule();
	}

	//enum EType:
	//
	//	BOOLEAN | ENUM;
	public ETypeElements getETypeAccess() {
		return (unknownRuleEType != null) ? unknownRuleEType : (unknownRuleEType = new ETypeElements());
	}
	
	public EnumRule getETypeRule() {
		return getETypeAccess().getRule();
	}

	//GenericValue returns ecore::EString:
	//
	//	STRING | INT | FLOAT;
	public GenericValueElements getGenericValueAccess() {
		return (pGenericValue != null) ? pGenericValue : (pGenericValue = new GenericValueElements());
	}
	
	public ParserRule getGenericValueRule() {
		return getGenericValueAccess().getRule();
	}

	//GenericNumber returns ecore::EString:
	//
	//	INT | FLOAT;
	public GenericNumberElements getGenericNumberAccess() {
		return (pGenericNumber != null) ? pGenericNumber : (pGenericNumber = new GenericNumberElements());
	}
	
	public ParserRule getGenericNumberRule() {
		return getGenericNumberAccess().getRule();
	}

	//enum ObjectType:
	//
	//	OS | ALARM | APPMODE | COUNTER | COM | EVENT | IPDU | ISR | MESSAGE | NETWORKMESSAGE | NM | RESOURCE | TASK |
	//
	//	APPLICATION | SPINLOCK;
	public ObjectTypeElements getObjectTypeAccess() {
		return (unknownRuleObjectType != null) ? unknownRuleObjectType : (unknownRuleObjectType = new ObjectTypeElements());
	}
	
	public EnumRule getObjectTypeRule() {
		return getObjectTypeAccess().getRule();
	}

	//enum ObjectTypeRef returns ObjectType:
	//
	//	OS="OS_TYPE" | ALARM="ALARM_TYPE" | APPMODE="APPMODE_TYPE" | COUNTER="COUNTER_TYPE" | COM="COM_TYPE" |
	//
	//	EVENT="EVENT_TYPE" | IPDU="IPDU_TYPE" | ISR="ISR_TYPE" | MESSAGE="MESSAGE_TYPE" |
	//
	//	NETWORKMESSAGE="NETWORKMESSAGE_TYPE" | NM="NM_TYPE" | RESOURCE="RESOURCE_TYPE" | TASK="TASK_TYPE" |
	//
	//	APPLICATION="APPLICATION_TYPE" | SPINLOCK="SPINLOCK_TYPE";
	public ObjectTypeRefElements getObjectTypeRefAccess() {
		return (unknownRuleObjectTypeRef != null) ? unknownRuleObjectTypeRef : (unknownRuleObjectTypeRef = new ObjectTypeRefElements());
	}
	
	public EnumRule getObjectTypeRefRule() {
		return getObjectTypeRefAccess().getRule();
	}

	//// Aggiungere la gestione dei numeri esadecimali
	//
	//INT returns ecore::EInt:
	//
	//	("+" | "-")? (NON_ZERO_INT (ZERO_INT | NON_ZERO_INT)* | ZERO_INT | HEX);
	public INTElements getINTAccess() {
		return (pINT != null) ? pINT : (pINT = new INTElements());
	}
	
	public ParserRule getINTRule() {
		return getINTAccess().getRule();
	}

	//FLOAT returns ecore::EFloat:
	//
	//	("+" | "-")? (ZERO_INT | NON_ZERO_INT (ZERO_INT | NON_ZERO_INT)*) => "." (ZERO_INT | NON_ZERO_INT)+;
	public FLOATElements getFLOATAccess() {
		return (pFLOAT != null) ? pFLOAT : (pFLOAT = new FLOATElements());
	}
	
	public ParserRule getFLOATRule() {
		return getFLOATAccess().getRule();
	}

	//terminal ID:
	//
	//	("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return (tID != null) ? tID : (tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID"));
	} 

	//terminal HEX returns ecore::EInt:
	//
	//	"0x" (ZERO_INT | NON_ZERO_INT | "A".."F" | "a".."f")+;
	public TerminalRule getHEXRule() {
		return (tHEX != null) ? tHEX : (tHEX = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "HEX"));
	} 

	//terminal NON_ZERO_INT returns ecore::EInt:
	//
	//	"1".."9";
	public TerminalRule getNON_ZERO_INTRule() {
		return (tNON_ZERO_INT != null) ? tNON_ZERO_INT : (tNON_ZERO_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NON_ZERO_INT"));
	} 

	//terminal ZERO_INT returns ecore::EInt:
	//
	//	"0";
	public TerminalRule getZERO_INTRule() {
		return (tZERO_INT != null) ? tZERO_INT : (tZERO_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ZERO_INT"));
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return (tSTRING != null) ? tSTRING : (tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING"));
	} 

	//terminal ML_COMMENT:
	//
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return (tML_COMMENT != null) ? tML_COMMENT : (tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ML_COMMENT"));
	} 

	//terminal SL_COMMENT:
	//
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal INCLUDE:
	//
	//	"#include" (" " | "\t")* ("<" ("\\" ("\"" | "\\") | !("\\" | "\"" | "\n" | "\r" | "<" | ">"))* ">" | "\"" ("\\" ("\""
	//
	//	| "\\") | !("\\" | "\"" | "\n" | "\r" | "<" | ">"))* "\"");
	public TerminalRule getINCLUDERule() {
		return (tINCLUDE != null) ? tINCLUDE : (tINCLUDE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INCLUDE"));
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return (tANY_OTHER != null) ? tANY_OTHER : (tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ANY_OTHER"));
	} 
}
