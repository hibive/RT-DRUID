/*
* generated by Xtext
*/
grammar InternalOil;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.eu.evidence.rtdruid.oil.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.eu.evidence.rtdruid.oil.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.eu.evidence.rtdruid.oil.xtext.services.OilGrammarAccess;

}

@parser::members {

 	private OilGrammarAccess grammarAccess;
 	
    public InternalOilParser(TokenStream input, OilGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "OilFile";	
   	}
   	
   	@Override
   	protected OilGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleOilFile
entryRuleOilFile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOilFileRule()); }
	 iv_ruleOilFile=ruleOilFile 
	 { $current=$iv_ruleOilFile.current; } 
	 EOF 
;

// Rule OilFile
ruleOilFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOilFileAccess().getOilFileAction_0(),
            $current);
    }
)(	otherlv_1='OIL_VERSION' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOilFileAccess().getOIL_VERSIONKeyword_1_0());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOilFileAccess().getEqualsSignKeyword_1_1());
    }
(
(
		lv_OilVersion_3_0=RULE_STRING
		{
			newLeafNode(lv_OilVersion_3_0, grammarAccess.getOilFileAccess().getOilVersionSTRINGTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOilFileRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"OilVersion",
        		lv_OilVersion_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOilFileAccess().getSemicolonKeyword_1_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOilFileAccess().getImplementationOilImplementationParserRuleCall_2_0()); 
	    }
		lv_Implementation_5_0=ruleOilImplementation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOilFileRule());
	        }
       		set(
       			$current, 
       			"Implementation",
        		lv_Implementation_5_0, 
        		"OilImplementation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOilFileAccess().getApplicationOilApplicationParserRuleCall_3_0()); 
	    }
		lv_Application_6_0=ruleOilApplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOilFileRule());
	        }
       		set(
       			$current, 
       			"Application",
        		lv_Application_6_0, 
        		"OilApplication");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleOilImplementation
entryRuleOilImplementation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOilImplementationRule()); }
	 iv_ruleOilImplementation=ruleOilImplementation 
	 { $current=$iv_ruleOilImplementation.current; } 
	 EOF 
;

// Rule OilImplementation
ruleOilImplementation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='IMPLEMENTATION' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOilImplementationAccess().getIMPLEMENTATIONKeyword_0());
    }
(
(
		lv_Name_1_0=RULE_ID
		{
			newLeafNode(lv_Name_1_0, grammarAccess.getOilImplementationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOilImplementationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Name",
        		lv_Name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOilImplementationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOilImplementationAccess().getOilObjectsOilObjectImplParserRuleCall_3_0()); 
	    }
		lv_OilObjects_3_0=ruleOilObjectImpl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOilImplementationRule());
	        }
       		add(
       			$current, 
       			"OilObjects",
        		lv_OilObjects_3_0, 
        		"OilObjectImpl");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOilImplementationAccess().getRightCurlyBracketKeyword_4());
    }
	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOilImplementationAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleOilObjectImpl
entryRuleOilObjectImpl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOilObjectImplRule()); }
	 iv_ruleOilObjectImpl=ruleOilObjectImpl 
	 { $current=$iv_ruleOilObjectImpl.current; } 
	 EOF 
;

// Rule OilObjectImpl
ruleOilObjectImpl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOilObjectImplAccess().getTypeObjectTypeEnumRuleCall_0_0()); 
	    }
		lv_Type_0_0=ruleObjectType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOilObjectImplRule());
	        }
       		set(
       			$current, 
       			"Type",
        		lv_Type_0_0, 
        		"ObjectType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOilObjectImplAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOilObjectImplAccess().getParametersParameterTypeParserRuleCall_2_0()); 
	    }
		lv_Parameters_2_0=ruleParameterType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOilObjectImplRule());
	        }
       		add(
       			$current, 
       			"Parameters",
        		lv_Parameters_2_0, 
        		"ParameterType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOilObjectImplAccess().getRightCurlyBracketKeyword_3());
    }
(	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOilObjectImplAccess().getColonKeyword_4_0());
    }
(
(
		lv_Description_5_0=RULE_STRING
		{
			newLeafNode(lv_Description_5_0, grammarAccess.getOilObjectImplAccess().getDescriptionSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOilObjectImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Description",
        		lv_Description_5_0, 
        		"STRING");
	    }

)
))?	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOilObjectImplAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleOilApplication
entryRuleOilApplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOilApplicationRule()); }
	 iv_ruleOilApplication=ruleOilApplication 
	 { $current=$iv_ruleOilApplication.current; } 
	 EOF 
;

// Rule OilApplication
ruleOilApplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='CPU' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOilApplicationAccess().getCPUKeyword_0());
    }
(
(
		lv_Name_1_0=RULE_ID
		{
			newLeafNode(lv_Name_1_0, grammarAccess.getOilApplicationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOilApplicationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Name",
        		lv_Name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOilApplicationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOilApplicationAccess().getOilObjectsOilObjectParserRuleCall_3_0()); 
	    }
		lv_OilObjects_3_0=ruleOilObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOilApplicationRule());
	        }
       		add(
       			$current, 
       			"OilObjects",
        		lv_OilObjects_3_0, 
        		"OilObject");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOilApplicationAccess().getRightCurlyBracketKeyword_4());
    }
(	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOilApplicationAccess().getColonKeyword_5_0());
    }
(
(
		lv_Description_6_0=RULE_STRING
		{
			newLeafNode(lv_Description_6_0, grammarAccess.getOilApplicationAccess().getDescriptionSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOilApplicationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Description",
        		lv_Description_6_0, 
        		"STRING");
	    }

)
))?	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOilApplicationAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleParameterType
entryRuleParameterType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterTypeRule()); }
	 iv_ruleParameterType=ruleParameterType 
	 { $current=$iv_ruleParameterType.current; } 
	 EOF 
;

// Rule ParameterType
ruleParameterType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getParameterTypeAccess().getValueTypeParserRuleCall_0()); 
    }
    this_ValueType_0=ruleValueType
    { 
        $current = $this_ValueType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParameterTypeAccess().getVariantTypeParserRuleCall_1()); 
    }
    this_VariantType_1=ruleVariantType
    { 
        $current = $this_VariantType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParameterTypeAccess().getReferenceTypeParserRuleCall_2()); 
    }
    this_ReferenceType_2=ruleReferenceType
    { 
        $current = $this_ReferenceType_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleValueType
entryRuleValueType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueTypeRule()); }
	 iv_ruleValueType=ruleValueType 
	 { $current=$iv_ruleValueType.current; } 
	 EOF 
;

// Rule ValueType
ruleValueType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getValueTypeAccess().getValueTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getValueTypeAccess().getTypeVTypeEnumRuleCall_1_0()); 
	    }
		lv_Type_1_0=ruleVType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueTypeRule());
	        }
       		set(
       			$current, 
       			"Type",
        		lv_Type_1_0, 
        		"VType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_WithAuto_2_0=	'WITH_AUTO' 
    {
        newLeafNode(lv_WithAuto_2_0, grammarAccess.getValueTypeAccess().getWithAutoWITH_AUTOKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueTypeRule());
	        }
       		setWithLastConsumed($current, "WithAuto", true, "WITH_AUTO");
	    }

)
)?(	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getValueTypeAccess().getLeftSquareBracketKeyword_3_0());
    }
(((
    { 
        newCompositeNode(grammarAccess.getValueTypeAccess().getINTParserRuleCall_3_1_0_0_0()); 
    }
ruleINT
    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueTypeAccess().getDOUBLEParserRuleCall_3_1_0_0_1()); 
    }
ruleDOUBLE
    { 
        afterParserOrEnumRuleCall();
    }
)	otherlv_6='..' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getValueTypeAccess().getFullStopFullStopKeyword_3_1_0_1());
    }
(
    { 
        newCompositeNode(grammarAccess.getValueTypeAccess().getINTParserRuleCall_3_1_0_2_0()); 
    }
ruleINT
    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueTypeAccess().getDOUBLEParserRuleCall_3_1_0_2_1()); 
    }
ruleDOUBLE
    { 
        afterParserOrEnumRuleCall();
    }
))
    |((
    { 
        newCompositeNode(grammarAccess.getValueTypeAccess().getINTParserRuleCall_3_1_1_0_0()); 
    }
ruleINT
    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueTypeAccess().getDOUBLEParserRuleCall_3_1_1_0_1()); 
    }
ruleDOUBLE
    { 
        afterParserOrEnumRuleCall();
    }
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getValueTypeAccess().getCommaKeyword_3_1_1_1_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getValueTypeAccess().getINTParserRuleCall_3_1_1_1_1_0()); 
    }
ruleINT
    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueTypeAccess().getDOUBLEParserRuleCall_3_1_1_1_1_1()); 
    }
ruleDOUBLE
    { 
        afterParserOrEnumRuleCall();
    }
))*))	otherlv_14=']' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getValueTypeAccess().getRightSquareBracketKeyword_3_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getValueTypeAccess().getNameSpecialIdParserRuleCall_4_0()); 
	    }
		lv_Name_15_0=ruleSpecialId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_15_0, 
        		"SpecialId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_MultiValue_16_0=	'[]' 
    {
        newLeafNode(lv_MultiValue_16_0, grammarAccess.getValueTypeAccess().getMultiValueLeftSquareBracketRightSquareBracketKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueTypeRule());
	        }
       		setWithLastConsumed($current, "MultiValue", true, "[]");
	    }

)
)?(	otherlv_17='=' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getValueTypeAccess().getEqualsSignKeyword_6_0());
    }
(((
(
	'AUTO' 
 

)
)=>
(
		lv_DefaultAuto_18_0=	'AUTO' 
    {
        newLeafNode(lv_DefaultAuto_18_0, grammarAccess.getValueTypeAccess().getDefaultAutoAUTOKeyword_6_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueTypeRule());
	        }
       		setWithLastConsumed($current, "DefaultAuto", true, "AUTO");
	    }

)
)
    |(
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueTypeAccess().getDefaultValueGenericValueParserRuleCall_6_1_1_0_0()); 
	    }
		lv_DefaultValue_19_1=ruleGenericValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueTypeRule());
	        }
       		set(
       			$current, 
       			"DefaultValue",
        		lv_DefaultValue_19_1, 
        		"GenericValue");
	        afterParserOrEnumRuleCall();
	    }

    |		lv_DefaultValue_19_2=RULE_ID
		{
			newLeafNode(lv_DefaultValue_19_2, grammarAccess.getValueTypeAccess().getDefaultValueIDTerminalRuleCall_6_1_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"DefaultValue",
        		lv_DefaultValue_19_2, 
        		"ID");
	    }

)

)
)))?(	otherlv_20=':' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getValueTypeAccess().getColonKeyword_7_0());
    }
(
(
		lv_Description_21_0=RULE_STRING
		{
			newLeafNode(lv_Description_21_0, grammarAccess.getValueTypeAccess().getDescriptionSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Description",
        		lv_Description_21_0, 
        		"STRING");
	    }

)
))?	otherlv_22=';' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getValueTypeAccess().getSemicolonKeyword_8());
    }
)
;





// Entry rule entryRuleVariantType
entryRuleVariantType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariantTypeRule()); }
	 iv_ruleVariantType=ruleVariantType 
	 { $current=$iv_ruleVariantType.current; } 
	 EOF 
;

// Rule VariantType
ruleVariantType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariantTypeAccess().getVariantTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariantTypeAccess().getTypeETypeEnumRuleCall_1_0()); 
	    }
		lv_Type_1_0=ruleEType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariantTypeRule());
	        }
       		set(
       			$current, 
       			"Type",
        		lv_Type_1_0, 
        		"EType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_WithAuto_2_0=	'WITH_AUTO' 
    {
        newLeafNode(lv_WithAuto_2_0, grammarAccess.getVariantTypeAccess().getWithAutoWITH_AUTOKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariantTypeRule());
	        }
       		setWithLastConsumed($current, "WithAuto", true, "WITH_AUTO");
	    }

)
)?(	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVariantTypeAccess().getLeftSquareBracketKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariantTypeAccess().getValuesEnumeratorTypeParserRuleCall_3_1_0_0()); 
	    }
		lv_Values_4_0=ruleEnumeratorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariantTypeRule());
	        }
       		add(
       			$current, 
       			"Values",
        		lv_Values_4_0, 
        		"EnumeratorType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVariantTypeAccess().getCommaKeyword_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariantTypeAccess().getValuesEnumeratorTypeParserRuleCall_3_1_1_1_0()); 
	    }
		lv_Values_6_0=ruleEnumeratorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariantTypeRule());
	        }
       		add(
       			$current, 
       			"Values",
        		lv_Values_6_0, 
        		"EnumeratorType");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVariantTypeAccess().getRightSquareBracketKeyword_3_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getVariantTypeAccess().getNameSpecialIdParserRuleCall_4_0()); 
	    }
		lv_Name_8_0=ruleSpecialId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariantTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_8_0, 
        		"SpecialId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_MultiValue_9_0=	'[]' 
    {
        newLeafNode(lv_MultiValue_9_0, grammarAccess.getVariantTypeAccess().getMultiValueLeftSquareBracketRightSquareBracketKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariantTypeRule());
	        }
       		setWithLastConsumed($current, "MultiValue", true, "[]");
	    }

)
)?(	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVariantTypeAccess().getEqualsSignKeyword_6_0());
    }
(((
(
	'AUTO' 
 

)
)=>
(
		lv_DefaultAuto_11_0=	'AUTO' 
    {
        newLeafNode(lv_DefaultAuto_11_0, grammarAccess.getVariantTypeAccess().getDefaultAutoAUTOKeyword_6_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariantTypeRule());
	        }
       		setWithLastConsumed($current, "DefaultAuto", true, "AUTO");
	    }

)
)
    |(
(
		lv_DefaultValue_12_0=RULE_ID
		{
			newLeafNode(lv_DefaultValue_12_0, grammarAccess.getVariantTypeAccess().getDefaultValueIDTerminalRuleCall_6_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariantTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"DefaultValue",
        		lv_DefaultValue_12_0, 
        		"ID");
	    }

)
)))?(	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getVariantTypeAccess().getColonKeyword_7_0());
    }
(
(
		lv_Description_14_0=RULE_STRING
		{
			newLeafNode(lv_Description_14_0, grammarAccess.getVariantTypeAccess().getDescriptionSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariantTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Description",
        		lv_Description_14_0, 
        		"STRING");
	    }

)
))?	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getVariantTypeAccess().getSemicolonKeyword_8());
    }
)
;





// Entry rule entryRuleEnumeratorType
entryRuleEnumeratorType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumeratorTypeRule()); }
	 iv_ruleEnumeratorType=ruleEnumeratorType 
	 { $current=$iv_ruleEnumeratorType.current; } 
	 EOF 
;

// Rule EnumeratorType
ruleEnumeratorType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEnumeratorTypeAccess().getEnumeratorTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeratorTypeAccess().getNameSpecialIdParserRuleCall_1_0()); 
	    }
		lv_Name_1_0=ruleSpecialId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeratorTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_1_0, 
        		"SpecialId");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumeratorTypeAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumeratorTypeAccess().getParametersParameterTypeParserRuleCall_2_1_0()); 
	    }
		lv_Parameters_3_0=ruleParameterType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumeratorTypeRule());
	        }
       		add(
       			$current, 
       			"Parameters",
        		lv_Parameters_3_0, 
        		"ParameterType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumeratorTypeAccess().getRightCurlyBracketKeyword_2_2());
    }
)?(	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEnumeratorTypeAccess().getColonKeyword_3_0());
    }
(
(
		lv_Description_6_0=RULE_STRING
		{
			newLeafNode(lv_Description_6_0, grammarAccess.getEnumeratorTypeAccess().getDescriptionSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumeratorTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Description",
        		lv_Description_6_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleReferenceType
entryRuleReferenceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceTypeRule()); }
	 iv_ruleReferenceType=ruleReferenceType 
	 { $current=$iv_ruleReferenceType.current; } 
	 EOF 
;

// Rule ReferenceType
ruleReferenceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getReferenceTypeAccess().getReferenceTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceTypeAccess().getTypeObjectTypeRefEnumRuleCall_1_0()); 
	    }
		lv_Type_1_0=ruleObjectTypeRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceTypeRule());
	        }
       		set(
       			$current, 
       			"Type",
        		lv_Type_1_0, 
        		"ObjectTypeRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_WithAuto_2_0=	'WITH_AUTO' 
    {
        newLeafNode(lv_WithAuto_2_0, grammarAccess.getReferenceTypeAccess().getWithAutoWITH_AUTOKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceTypeRule());
	        }
       		setWithLastConsumed($current, "WithAuto", true, "WITH_AUTO");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceTypeAccess().getNameSpecialIdParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=ruleSpecialId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"SpecialId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_MultiValue_4_0=	'[]' 
    {
        newLeafNode(lv_MultiValue_4_0, grammarAccess.getReferenceTypeAccess().getMultiValueLeftSquareBracketRightSquareBracketKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceTypeRule());
	        }
       		setWithLastConsumed($current, "MultiValue", true, "[]");
	    }

)
)?(	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getReferenceTypeAccess().getEqualsSignKeyword_5_0());
    }
(((
(
	'AUTO' 
 

)
)=>
(
		lv_DefaultAuto_6_0=	'AUTO' 
    {
        newLeafNode(lv_DefaultAuto_6_0, grammarAccess.getReferenceTypeAccess().getDefaultAutoAUTOKeyword_5_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceTypeRule());
	        }
       		setWithLastConsumed($current, "DefaultAuto", true, "AUTO");
	    }

)
)
    |(
(
		lv_DefaultValue_7_0=RULE_ID
		{
			newLeafNode(lv_DefaultValue_7_0, grammarAccess.getReferenceTypeAccess().getDefaultValueIDTerminalRuleCall_5_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"DefaultValue",
        		lv_DefaultValue_7_0, 
        		"ID");
	    }

)
)))?(	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getReferenceTypeAccess().getColonKeyword_6_0());
    }
(
(
		lv_Description_9_0=RULE_STRING
		{
			newLeafNode(lv_Description_9_0, grammarAccess.getReferenceTypeAccess().getDescriptionSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Description",
        		lv_Description_9_0, 
        		"STRING");
	    }

)
))?	otherlv_10=';' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getReferenceTypeAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleOilObject
entryRuleOilObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOilObjectRule()); }
	 iv_ruleOilObject=ruleOilObject 
	 { $current=$iv_ruleOilObject.current; } 
	 EOF 
;

// Rule OilObject
ruleOilObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOilObjectAccess().getTypeObjectTypeEnumRuleCall_0_0()); 
	    }
		lv_Type_0_0=ruleObjectType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOilObjectRule());
	        }
       		set(
       			$current, 
       			"Type",
        		lv_Type_0_0, 
        		"ObjectType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_Name_1_0=RULE_ID
		{
			newLeafNode(lv_Name_1_0, grammarAccess.getOilObjectAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOilObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Name",
        		lv_Name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOilObjectAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOilObjectAccess().getParametersParameterParserRuleCall_2_1_0()); 
	    }
		lv_Parameters_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOilObjectRule());
	        }
       		add(
       			$current, 
       			"Parameters",
        		lv_Parameters_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOilObjectAccess().getRightCurlyBracketKeyword_2_2());
    }
)?(	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOilObjectAccess().getColonKeyword_3_0());
    }
(
(
		lv_Description_6_0=RULE_STRING
		{
			newLeafNode(lv_Description_6_0, grammarAccess.getOilObjectAccess().getDescriptionSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOilObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Description",
        		lv_Description_6_0, 
        		"STRING");
	    }

)
))?	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOilObjectAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterAccess().getParameterAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getTypeParameterTypeCrossReference_1_0()); 
	    }
		ruleSpecialId		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getEqualsSignKeyword_2());
    }
(((
(
	'AUTO' 
 

)
)=>
(
		lv_Auto_3_0=	'AUTO' 
    {
        newLeafNode(lv_Auto_3_0, grammarAccess.getParameterAccess().getAutoAUTOKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed($current, "Auto", true, "AUTO");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getValueGenericValueParserRuleCall_3_1_0()); 
	    }
		lv_Value_4_0=ruleGenericValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"Value",
        		lv_Value_4_0, 
        		"GenericValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getValueRefParameterRefCrossReference_3_2_0()); 
	    }
		ruleSpecialId		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getParametersParameterParserRuleCall_4_1_0()); 
	    }
		lv_Parameters_7_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		add(
       			$current, 
       			"Parameters",
        		lv_Parameters_7_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_4_2());
    }
)?(	otherlv_9=':' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getParameterAccess().getColonKeyword_5_0());
    }
(
(
		lv_Description_10_0=RULE_STRING
		{
			newLeafNode(lv_Description_10_0, grammarAccess.getParameterAccess().getDescriptionSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Description",
        		lv_Description_10_0, 
        		"STRING");
	    }

)
))?	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getParameterAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleSpecialId
entryRuleSpecialId returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecialIdRule()); } 
	 iv_ruleSpecialId=ruleSpecialId 
	 { $current=$iv_ruleSpecialId.current.getText(); }  
	 EOF 
;

// Rule SpecialId
ruleSpecialId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getSpecialIdAccess().getIDTerminalRuleCall_0()); 
    }

    |
	kw='STRING' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getSTRINGKeyword_1()); 
    }

    |
	kw='UINT32' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getUINT32Keyword_2()); 
    }

    |
	kw='INT32' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getINT32Keyword_3()); 
    }

    |
	kw='UINT64' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getUINT64Keyword_4()); 
    }

    |
	kw='INT64' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getINT64Keyword_5()); 
    }

    |
	kw='FLOAT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getFLOATKeyword_6()); 
    }

    |
	kw='DOUBLE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getDOUBLEKeyword_7()); 
    }

    |
	kw='BOOLEAN' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getBOOLEANKeyword_8()); 
    }

    |
	kw='ENUM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getENUMKeyword_9()); 
    }

    |
	kw='OS' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getOSKeyword_10()); 
    }

    |
	kw='ALARM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getALARMKeyword_11()); 
    }

    |
	kw='APPMODE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getAPPMODEKeyword_12()); 
    }

    |
	kw='COUNTER' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getCOUNTERKeyword_13()); 
    }

    |
	kw='COM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getCOMKeyword_14()); 
    }

    |
	kw='EVENT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getEVENTKeyword_15()); 
    }

    |
	kw='IPDU' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getIPDUKeyword_16()); 
    }

    |
	kw='ISR' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getISRKeyword_17()); 
    }

    |
	kw='MESSAGE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getMESSAGEKeyword_18()); 
    }

    |
	kw='NETWORKMESSAGE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getNETWORKMESSAGEKeyword_19()); 
    }

    |
	kw='NM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getNMKeyword_20()); 
    }

    |
	kw='RESOURCE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getRESOURCEKeyword_21()); 
    }

    |
	kw='TASK' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getTASKKeyword_22()); 
    }

    |
	kw='OS_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getOS_TYPEKeyword_23()); 
    }

    |
	kw='ALARM_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getALARM_TYPEKeyword_24()); 
    }

    |
	kw='APPMODE_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getAPPMODE_TYPEKeyword_25()); 
    }

    |
	kw='COUNTER_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getCOUNTER_TYPEKeyword_26()); 
    }

    |
	kw='COM_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getCOM_TYPEKeyword_27()); 
    }

    |
	kw='EVENT_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getEVENT_TYPEKeyword_28()); 
    }

    |
	kw='IPDU_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getIPDU_TYPEKeyword_29()); 
    }

    |
	kw='ISR_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getISR_TYPEKeyword_30()); 
    }

    |
	kw='MESSAGE_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getMESSAGE_TYPEKeyword_31()); 
    }

    |
	kw='NETWORKMESSAGE_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getNETWORKMESSAGE_TYPEKeyword_32()); 
    }

    |
	kw='NM_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getNM_TYPEKeyword_33()); 
    }

    |
	kw='RESOURCE_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getRESOURCE_TYPEKeyword_34()); 
    }

    |
	kw='TASK_TYPE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialIdAccess().getTASK_TYPEKeyword_35()); 
    }
)
    ;





// Entry rule entryRuleGenericValue
entryRuleGenericValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getGenericValueRule()); } 
	 iv_ruleGenericValue=ruleGenericValue 
	 { $current=$iv_ruleGenericValue.current.getText(); }  
	 EOF 
;

// Rule GenericValue
ruleGenericValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getGenericValueAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getGenericValueAccess().getINTParserRuleCall_1()); 
    }
    this_INT_1=ruleINT    {
		$current.merge(this_INT_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGenericValueAccess().getDOUBLEParserRuleCall_2()); 
    }
    this_DOUBLE_2=ruleDOUBLE    {
		$current.merge(this_DOUBLE_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleINT
entryRuleINT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getINTRule()); } 
	 iv_ruleINT=ruleINT 
	 { $current=$iv_ruleINT.current.getText(); }  
	 EOF 
;

// Rule INT
ruleINT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getINTAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getINTAccess().getHyphenMinusKeyword_0_1()); 
    }
)?((    this_NON_ZERO_INT_2=RULE_NON_ZERO_INT    {
		$current.merge(this_NON_ZERO_INT_2);
    }

    { 
    newLeafNode(this_NON_ZERO_INT_2, grammarAccess.getINTAccess().getNON_ZERO_INTTerminalRuleCall_1_0_0()); 
    }
(    this_ZERO_INT_3=RULE_ZERO_INT    {
		$current.merge(this_ZERO_INT_3);
    }

    { 
    newLeafNode(this_ZERO_INT_3, grammarAccess.getINTAccess().getZERO_INTTerminalRuleCall_1_0_1_0()); 
    }

    |    this_NON_ZERO_INT_4=RULE_NON_ZERO_INT    {
		$current.merge(this_NON_ZERO_INT_4);
    }

    { 
    newLeafNode(this_NON_ZERO_INT_4, grammarAccess.getINTAccess().getNON_ZERO_INTTerminalRuleCall_1_0_1_1()); 
    }
)*)
    |    this_ZERO_INT_5=RULE_ZERO_INT    {
		$current.merge(this_ZERO_INT_5);
    }

    { 
    newLeafNode(this_ZERO_INT_5, grammarAccess.getINTAccess().getZERO_INTTerminalRuleCall_1_1()); 
    }

    |    this_HEX_6=RULE_HEX    {
		$current.merge(this_HEX_6);
    }

    { 
    newLeafNode(this_HEX_6, grammarAccess.getINTAccess().getHEXTerminalRuleCall_1_2()); 
    }
))
    ;





// Entry rule entryRuleDOUBLE
entryRuleDOUBLE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDOUBLERule()); } 
	 iv_ruleDOUBLE=ruleDOUBLE 
	 { $current=$iv_ruleDOUBLE.current.getText(); }  
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDOUBLEAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDOUBLEAccess().getHyphenMinusKeyword_0_1()); 
    }
)?(    this_ZERO_INT_2=RULE_ZERO_INT    {
		$current.merge(this_ZERO_INT_2);
    }

    { 
    newLeafNode(this_ZERO_INT_2, grammarAccess.getDOUBLEAccess().getZERO_INTTerminalRuleCall_1_0()); 
    }

    |(    this_NON_ZERO_INT_3=RULE_NON_ZERO_INT    {
		$current.merge(this_NON_ZERO_INT_3);
    }

    { 
    newLeafNode(this_NON_ZERO_INT_3, grammarAccess.getDOUBLEAccess().getNON_ZERO_INTTerminalRuleCall_1_1_0()); 
    }
(    this_ZERO_INT_4=RULE_ZERO_INT    {
		$current.merge(this_ZERO_INT_4);
    }

    { 
    newLeafNode(this_ZERO_INT_4, grammarAccess.getDOUBLEAccess().getZERO_INTTerminalRuleCall_1_1_1_0()); 
    }

    |    this_NON_ZERO_INT_5=RULE_NON_ZERO_INT    {
		$current.merge(this_NON_ZERO_INT_5);
    }

    { 
    newLeafNode(this_NON_ZERO_INT_5, grammarAccess.getDOUBLEAccess().getNON_ZERO_INTTerminalRuleCall_1_1_1_1()); 
    }
)*))((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDOUBLEAccess().getFullStopKeyword_2()); 
    }
)(    this_ZERO_INT_7=RULE_ZERO_INT    {
		$current.merge(this_ZERO_INT_7);
    }

    { 
    newLeafNode(this_ZERO_INT_7, grammarAccess.getDOUBLEAccess().getZERO_INTTerminalRuleCall_3_0()); 
    }

    |    this_NON_ZERO_INT_8=RULE_NON_ZERO_INT    {
		$current.merge(this_NON_ZERO_INT_8);
    }

    { 
    newLeafNode(this_NON_ZERO_INT_8, grammarAccess.getDOUBLEAccess().getNON_ZERO_INTTerminalRuleCall_3_1()); 
    }
)+)
    ;





// Rule VType
ruleVType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='STRING' 
	{
        $current = grammarAccess.getVTypeAccess().getSTRINGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVTypeAccess().getSTRINGEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='UINT32' 
	{
        $current = grammarAccess.getVTypeAccess().getUINT32EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVTypeAccess().getUINT32EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='INT32' 
	{
        $current = grammarAccess.getVTypeAccess().getINT32EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVTypeAccess().getINT32EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='UINT64' 
	{
        $current = grammarAccess.getVTypeAccess().getUINT64EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getVTypeAccess().getUINT64EnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='INT64' 
	{
        $current = grammarAccess.getVTypeAccess().getINT64EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getVTypeAccess().getINT64EnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='FLOAT' 
	{
        $current = grammarAccess.getVTypeAccess().getFLOATEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getVTypeAccess().getFLOATEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='DOUBLE' 
	{
        $current = grammarAccess.getVTypeAccess().getDOUBLEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getVTypeAccess().getDOUBLEEnumLiteralDeclaration_6()); 
    }
));



// Rule EType
ruleEType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='BOOLEAN' 
	{
        $current = grammarAccess.getETypeAccess().getBOOLEANEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getETypeAccess().getBOOLEANEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='ENUM' 
	{
        $current = grammarAccess.getETypeAccess().getENUMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getETypeAccess().getENUMEnumLiteralDeclaration_1()); 
    }
));



// Rule ObjectType
ruleObjectType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='OS' 
	{
        $current = grammarAccess.getObjectTypeAccess().getOSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getObjectTypeAccess().getOSEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='ALARM' 
	{
        $current = grammarAccess.getObjectTypeAccess().getALARMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getObjectTypeAccess().getALARMEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='APPMODE' 
	{
        $current = grammarAccess.getObjectTypeAccess().getAPPMODEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getObjectTypeAccess().getAPPMODEEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='COUNTER' 
	{
        $current = grammarAccess.getObjectTypeAccess().getCOUNTEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getObjectTypeAccess().getCOUNTEREnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='COM' 
	{
        $current = grammarAccess.getObjectTypeAccess().getCOMEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getObjectTypeAccess().getCOMEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='EVENT' 
	{
        $current = grammarAccess.getObjectTypeAccess().getEVENTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getObjectTypeAccess().getEVENTEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='IPDU' 
	{
        $current = grammarAccess.getObjectTypeAccess().getIPDUEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getObjectTypeAccess().getIPDUEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='ISR' 
	{
        $current = grammarAccess.getObjectTypeAccess().getISREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getObjectTypeAccess().getISREnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='MESSAGE' 
	{
        $current = grammarAccess.getObjectTypeAccess().getMESSAGEEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getObjectTypeAccess().getMESSAGEEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='NETWORKMESSAGE' 
	{
        $current = grammarAccess.getObjectTypeAccess().getNETWORKMESSAGEEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getObjectTypeAccess().getNETWORKMESSAGEEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='NM' 
	{
        $current = grammarAccess.getObjectTypeAccess().getNMEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getObjectTypeAccess().getNMEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='RESOURCE' 
	{
        $current = grammarAccess.getObjectTypeAccess().getRESOURCEEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getObjectTypeAccess().getRESOURCEEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='TASK' 
	{
        $current = grammarAccess.getObjectTypeAccess().getTASKEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getObjectTypeAccess().getTASKEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='APPLICATION' 
	{
        $current = grammarAccess.getObjectTypeAccess().getAPPLICATIONEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getObjectTypeAccess().getAPPLICATIONEnumLiteralDeclaration_13()); 
    }
));



// Rule ObjectTypeRef
ruleObjectTypeRef returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='OS_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getOSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getObjectTypeRefAccess().getOSEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='ALARM_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getALARMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getObjectTypeRefAccess().getALARMEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='APPMODE_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getAPPMODEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getObjectTypeRefAccess().getAPPMODEEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='COUNTER_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getCOUNTEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getObjectTypeRefAccess().getCOUNTEREnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='COM_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getCOMEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getObjectTypeRefAccess().getCOMEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='EVENT_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getEVENTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getObjectTypeRefAccess().getEVENTEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='IPDU_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getIPDUEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getObjectTypeRefAccess().getIPDUEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='ISR_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getISREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getObjectTypeRefAccess().getISREnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='MESSAGE_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getMESSAGEEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getObjectTypeRefAccess().getMESSAGEEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='NETWORKMESSAGE_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getNETWORKMESSAGEEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getObjectTypeRefAccess().getNETWORKMESSAGEEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='NM_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getNMEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getObjectTypeRefAccess().getNMEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='RESOURCE_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getRESOURCEEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getObjectTypeRefAccess().getRESOURCEEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='TASK_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getTASKEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getObjectTypeRefAccess().getTASKEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='APPLICATION_TYPE' 
	{
        $current = grammarAccess.getObjectTypeRefAccess().getAPPLICATIONEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getObjectTypeRefAccess().getAPPLICATIONEnumLiteralDeclaration_13()); 
    }
));



RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_HEX : '0x' (RULE_ZERO_INT|RULE_NON_ZERO_INT|'A'..'F'|'a'..'f')+;

RULE_NON_ZERO_INT : '1'..'9';

RULE_ZERO_INT : '0';

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


