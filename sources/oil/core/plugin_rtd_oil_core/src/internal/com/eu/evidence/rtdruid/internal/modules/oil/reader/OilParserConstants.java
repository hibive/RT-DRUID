/* Generated By:JavaCC: Do not edit this line. OilParserConstants.java */
package com.eu.evidence.rtdruid.internal.modules.oil.reader;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface OilParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 7;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 8;
  /** RegularExpression Id. */
  int TRUE = 9;
  /** RegularExpression Id. */
  int FALSE = 10;
  /** RegularExpression Id. */
  int UINT32 = 11;
  /** RegularExpression Id. */
  int INT32 = 12;
  /** RegularExpression Id. */
  int UINT64 = 13;
  /** RegularExpression Id. */
  int INT64 = 14;
  /** RegularExpression Id. */
  int FLOAT = 15;
  /** RegularExpression Id. */
  int ENUM = 16;
  /** RegularExpression Id. */
  int STRING = 17;
  /** RegularExpression Id. */
  int BOOLEAN = 18;
  /** RegularExpression Id. */
  int AUTO = 19;
  /** RegularExpression Id. */
  int NO_DEFAULT = 20;
  /** RegularExpression Id. */
  int OIL_VERSION = 21;
  /** RegularExpression Id. */
  int IMPLEMENTATION = 22;
  /** RegularExpression Id. */
  int CPU = 23;
  /** RegularExpression Id. */
  int auto_specifier = 24;
  /** RegularExpression Id. */
  int object = 25;
  /** RegularExpression Id. */
  int object_ref_type = 26;
  /** RegularExpression Id. */
  int String = 27;
  /** RegularExpression Id. */
  int name = 28;
  /** RegularExpression Id. */
  int number = 29;
  /** RegularExpression Id. */
  int float_ = 30;
  /** RegularExpression Id. */
  int dec_number = 31;
  /** RegularExpression Id. */
  int sign = 32;
  /** RegularExpression Id. */
  int int_digits = 33;
  /** RegularExpression Id. */
  int dec_digits = 34;
  /** RegularExpression Id. */
  int exponent = 35;
  /** RegularExpression Id. */
  int zero_digit = 36;
  /** RegularExpression Id. */
  int pos_digit = 37;
  /** RegularExpression Id. */
  int dec_digit = 38;
  /** RegularExpression Id. */
  int hex_number = 39;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"\\u00a0\"",
    "<SINGLE_LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "\"TRUE\"",
    "\"FALSE\"",
    "\"UINT32\"",
    "\"INT32\"",
    "\"UINT64\"",
    "\"INT64\"",
    "\"FLOAT\"",
    "\"ENUM\"",
    "\"STRING\"",
    "\"BOOLEAN\"",
    "\"AUTO\"",
    "\"NO_DEFAULT\"",
    "\"OIL_VERSION\"",
    "\"IMPLEMENTATION\"",
    "\"CPU\"",
    "\"WITH_AUTO\"",
    "<object>",
    "<object_ref_type>",
    "<String>",
    "<name>",
    "<number>",
    "<float_>",
    "<dec_number>",
    "<sign>",
    "<int_digits>",
    "<dec_digits>",
    "<exponent>",
    "\"0\"",
    "<pos_digit>",
    "<dec_digit>",
    "<hex_number>",
    "\":\"",
    "\"=\"",
    "\";\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"..\"",
    "\",\"",
  };

}
