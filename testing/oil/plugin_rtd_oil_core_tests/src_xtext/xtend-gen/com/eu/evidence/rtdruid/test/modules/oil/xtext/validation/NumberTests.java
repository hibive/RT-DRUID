package com.eu.evidence.rtdruid.test.modules.oil.xtext.validation;

import com.eu.evidence.rtdruid.test.modules.oil.xtext.OilInjectorProvider;
import com.eu.evidence.rtdruid.test.modules.oil.xtext.PackageProvider;
import org.eclipse.xtext.junit4.InjectWith;
import org.eclipse.xtext.xbase.lib.Functions.Function0;
import org.eclipselabs.xtext.utils.unittesting.FluentIssueCollection;
import org.eclipselabs.xtext.utils.unittesting.XtextRunner2;
import org.eclipselabs.xtext.utils.unittesting.XtextTest;
import org.junit.Test;
import org.junit.runner.RunWith;

@SuppressWarnings("all")
@RunWith(XtextRunner2.class)
@InjectWith(OilInjectorProvider.class)
public class NumberTests extends XtextTest {
  private static String path = new Function0<String>() {
    public String apply() {
      String _computeBundleClassPath = PackageProvider.DEFAULT.computeBundleClassPath(com.eu.evidence.rtdruid.test.modules.oil.xtext.validation.NumberTests.class);
      return _computeBundleClassPath;
    }
  }.apply();
  
  public NumberTests() {
    super(NumberTests.path);
  }
  
  @Test
  public void int32Test() {
      this.ignoreFormattingDifferences();
      this.testFile("testNumberInt32.oil");
      FluentIssueCollection _errorsOnly = this.issues.errorsOnly();
      FluentIssueCollection _inLine = _errorsOnly.inLine(19);
      FluentIssueCollection _under = _inLine.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains = _under.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_1 = _oneOfThemContains.oneOfThemContains("INT32");
      FluentIssueCollection _oneOfThemContains_2 = _oneOfThemContains_1.oneOfThemContains("1.0");
      this.assertConstraints(_oneOfThemContains_2);
      FluentIssueCollection _errorsOnly_1 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_1 = _errorsOnly_1.inLine(20);
      FluentIssueCollection _under_1 = _inLine_1.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_3 = _under_1.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_4 = _oneOfThemContains_3.oneOfThemContains("INT32");
      FluentIssueCollection _oneOfThemContains_5 = _oneOfThemContains_4.oneOfThemContains("-1.0");
      this.assertConstraints(_oneOfThemContains_5);
      FluentIssueCollection _errorsOnly_2 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_2 = _errorsOnly_2.inLine(23);
      FluentIssueCollection _under_2 = _inLine_2.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_6 = _under_2.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_7 = _oneOfThemContains_6.oneOfThemContains("INT32");
      FluentIssueCollection _oneOfThemContains_8 = _oneOfThemContains_7.oneOfThemContains("0xFFFFFFFFF");
      this.assertConstraints(_oneOfThemContains_8);
      FluentIssueCollection _errorsOnly_3 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_3 = _errorsOnly_3.inLine(25);
      FluentIssueCollection _under_3 = _inLine_3.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_9 = _under_3.oneOfThemContains("does not support AUTO");
      this.assertConstraints(_oneOfThemContains_9);
  }
  
  @Test
  public void int64Test() {
      this.ignoreFormattingDifferences();
      this.testFile("testNumberInt64.oil");
      FluentIssueCollection _errorsOnly = this.issues.errorsOnly();
      FluentIssueCollection _inLine = _errorsOnly.inLine(19);
      FluentIssueCollection _under = _inLine.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains = _under.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_1 = _oneOfThemContains.oneOfThemContains("INT64");
      FluentIssueCollection _oneOfThemContains_2 = _oneOfThemContains_1.oneOfThemContains("1.0");
      this.assertConstraints(_oneOfThemContains_2);
      FluentIssueCollection _errorsOnly_1 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_1 = _errorsOnly_1.inLine(20);
      FluentIssueCollection _under_1 = _inLine_1.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_3 = _under_1.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_4 = _oneOfThemContains_3.oneOfThemContains("INT64");
      FluentIssueCollection _oneOfThemContains_5 = _oneOfThemContains_4.oneOfThemContains("-1.0");
      this.assertConstraints(_oneOfThemContains_5);
      FluentIssueCollection _errorsOnly_2 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_2 = _errorsOnly_2.inLine(23);
      FluentIssueCollection _under_2 = _inLine_2.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_6 = _under_2.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_7 = _oneOfThemContains_6.oneOfThemContains("INT64");
      FluentIssueCollection _oneOfThemContains_8 = _oneOfThemContains_7.oneOfThemContains("0xFFFFFFFFF");
      this.assertConstraints(_oneOfThemContains_8);
      FluentIssueCollection _errorsOnly_3 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_3 = _errorsOnly_3.inLine(25);
      FluentIssueCollection _under_3 = _inLine_3.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_9 = _under_3.oneOfThemContains("does not support AUTO");
      this.assertConstraints(_oneOfThemContains_9);
  }
  
  @Test
  public void unit32Test() {
      this.ignoreFormattingDifferences();
      this.testFile("testNumberUInt32.oil");
      FluentIssueCollection _errorsOnly = this.issues.errorsOnly();
      FluentIssueCollection _inLine = _errorsOnly.inLine(27);
      FluentIssueCollection _under = _inLine.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains = _under.oneOfThemContains("Expected a positive value");
      FluentIssueCollection _oneOfThemContains_1 = _oneOfThemContains.oneOfThemContains("-2");
      this.assertConstraints(_oneOfThemContains_1);
      FluentIssueCollection _warningsOnly = this.issues.warningsOnly();
      FluentIssueCollection _inLine_1 = _warningsOnly.inLine(18);
      FluentIssueCollection _under_1 = _inLine_1.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_2 = _under_1.oneOfThemContains("Assign -1");
      FluentIssueCollection _oneOfThemContains_3 = _oneOfThemContains_2.oneOfThemContains("UINT32");
      this.assertConstraints(_oneOfThemContains_3);
      FluentIssueCollection _errorsOnly_1 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_2 = _errorsOnly_1.inLine(19);
      FluentIssueCollection _under_2 = _inLine_2.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_4 = _under_2.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_5 = _oneOfThemContains_4.oneOfThemContains("UINT32");
      FluentIssueCollection _oneOfThemContains_6 = _oneOfThemContains_5.oneOfThemContains("1.0");
      this.assertConstraints(_oneOfThemContains_6);
      FluentIssueCollection _errorsOnly_2 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_3 = _errorsOnly_2.inLine(20);
      FluentIssueCollection _under_3 = _inLine_3.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_7 = _under_3.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_8 = _oneOfThemContains_7.oneOfThemContains("UINT32");
      FluentIssueCollection _oneOfThemContains_9 = _oneOfThemContains_8.oneOfThemContains("-1.0");
      this.assertConstraints(_oneOfThemContains_9);
      FluentIssueCollection _errorsOnly_3 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_4 = _errorsOnly_3.inLine(22);
      FluentIssueCollection _under_4 = _inLine_4.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_10 = _under_4.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_11 = _oneOfThemContains_10.oneOfThemContains("UINT32");
      FluentIssueCollection _oneOfThemContains_12 = _oneOfThemContains_11.oneOfThemContains("-0x1");
      this.assertConstraints(_oneOfThemContains_12);
      FluentIssueCollection _errorsOnly_4 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_5 = _errorsOnly_4.inLine(23);
      FluentIssueCollection _under_5 = _inLine_5.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_13 = _under_5.oneOfThemContains("does not fit");
      FluentIssueCollection _oneOfThemContains_14 = _oneOfThemContains_13.oneOfThemContains("UINT32");
      FluentIssueCollection _oneOfThemContains_15 = _oneOfThemContains_14.oneOfThemContains("0xFFFFFFFFF");
      this.assertConstraints(_oneOfThemContains_15);
      FluentIssueCollection _errorsOnly_5 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_6 = _errorsOnly_5.inLine(25);
      FluentIssueCollection _under_6 = _inLine_6.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_16 = _under_6.oneOfThemContains("does not support AUTO");
      this.assertConstraints(_oneOfThemContains_16);
  }
  
  @Test
  public void unit64Test() {
      this.ignoreFormattingDifferences();
      this.testFile("testNumberUInt64.oil");
      FluentIssueCollection _errorsOnly = this.issues.errorsOnly();
      FluentIssueCollection _inLine = _errorsOnly.inLine(27);
      FluentIssueCollection _under = _inLine.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains = _under.oneOfThemContains("Expected a positive value");
      FluentIssueCollection _oneOfThemContains_1 = _oneOfThemContains.oneOfThemContains("-2");
      this.assertConstraints(_oneOfThemContains_1);
      FluentIssueCollection _warningsOnly = this.issues.warningsOnly();
      FluentIssueCollection _inLine_1 = _warningsOnly.inLine(18);
      FluentIssueCollection _under_1 = _inLine_1.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_2 = _under_1.oneOfThemContains("Assign -1");
      FluentIssueCollection _oneOfThemContains_3 = _oneOfThemContains_2.oneOfThemContains("UINT64");
      this.assertConstraints(_oneOfThemContains_3);
      FluentIssueCollection _errorsOnly_1 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_2 = _errorsOnly_1.inLine(19);
      FluentIssueCollection _under_2 = _inLine_2.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_4 = _under_2.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_5 = _oneOfThemContains_4.oneOfThemContains("UINT64");
      FluentIssueCollection _oneOfThemContains_6 = _oneOfThemContains_5.oneOfThemContains("1.0");
      this.assertConstraints(_oneOfThemContains_6);
      FluentIssueCollection _errorsOnly_2 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_3 = _errorsOnly_2.inLine(20);
      FluentIssueCollection _under_3 = _inLine_3.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_7 = _under_3.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_8 = _oneOfThemContains_7.oneOfThemContains("UINT64");
      FluentIssueCollection _oneOfThemContains_9 = _oneOfThemContains_8.oneOfThemContains("-1.0");
      this.assertConstraints(_oneOfThemContains_9);
      FluentIssueCollection _errorsOnly_3 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_4 = _errorsOnly_3.inLine(22);
      FluentIssueCollection _under_4 = _inLine_4.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_10 = _under_4.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_11 = _oneOfThemContains_10.oneOfThemContains("UINT64");
      FluentIssueCollection _oneOfThemContains_12 = _oneOfThemContains_11.oneOfThemContains("-0x1");
      this.assertConstraints(_oneOfThemContains_12);
      FluentIssueCollection _errorsOnly_4 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_5 = _errorsOnly_4.inLine(23);
      FluentIssueCollection _under_5 = _inLine_5.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_13 = _under_5.oneOfThemContains("does not fit");
      FluentIssueCollection _oneOfThemContains_14 = _oneOfThemContains_13.oneOfThemContains("UINT64");
      FluentIssueCollection _oneOfThemContains_15 = _oneOfThemContains_14.oneOfThemContains("0xFFFFFFFFF");
      this.assertConstraints(_oneOfThemContains_15);
      FluentIssueCollection _errorsOnly_5 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_6 = _errorsOnly_5.inLine(25);
      FluentIssueCollection _under_6 = _inLine_6.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_16 = _under_6.oneOfThemContains("does not support AUTO");
      this.assertConstraints(_oneOfThemContains_16);
  }
  
  @Test
  public void floatTest() {
      this.ignoreFormattingDifferences();
      this.testFile("testNumberFloat.oil");
      FluentIssueCollection _errorsOnly = this.issues.errorsOnly();
      FluentIssueCollection _inLine = _errorsOnly.inLine(20);
      FluentIssueCollection _under = _inLine.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains = _under.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_1 = _oneOfThemContains.oneOfThemContains("FLOAT");
      FluentIssueCollection _oneOfThemContains_2 = _oneOfThemContains_1.oneOfThemContains("0x1");
      this.assertConstraints(_oneOfThemContains_2);
      FluentIssueCollection _errorsOnly_1 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_1 = _errorsOnly_1.inLine(21);
      FluentIssueCollection _under_1 = _inLine_1.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_3 = _under_1.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_4 = _oneOfThemContains_3.oneOfThemContains("FLOAT");
      FluentIssueCollection _oneOfThemContains_5 = _oneOfThemContains_4.oneOfThemContains("0xFFFFFFFFF");
      this.assertConstraints(_oneOfThemContains_5);
      FluentIssueCollection _errorsOnly_2 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_2 = _errorsOnly_2.inLine(22);
      FluentIssueCollection _under_2 = _inLine_2.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_6 = _under_2.oneOfThemContains("Expected a valid");
      FluentIssueCollection _oneOfThemContains_7 = _oneOfThemContains_6.oneOfThemContains("FLOAT");
      FluentIssueCollection _oneOfThemContains_8 = _oneOfThemContains_7.oneOfThemContains("0xAFFFFFF");
      this.assertConstraints(_oneOfThemContains_8);
      FluentIssueCollection _errorsOnly_3 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_3 = _errorsOnly_3.inLine(23);
      FluentIssueCollection _under_3 = _inLine_3.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_9 = _under_3.oneOfThemContains("does not support AUTO");
      this.assertConstraints(_oneOfThemContains_9);
  }
  
  @Test
  public void composedNumberTest() {
      this.ignoreFormattingDifferences();
      this.testFile("testNumberComposed.oil");
      FluentIssueCollection _errorsOnly = this.issues.errorsOnly();
      FluentIssueCollection _inLine = _errorsOnly.inLine(22);
      FluentIssueCollection _under = _inLine.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains = _under.oneOfThemContains("cannot contain sub-element");
      this.assertConstraints(_oneOfThemContains);
      FluentIssueCollection _errorsOnly_1 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_1 = _errorsOnly_1.inLine(23);
      FluentIssueCollection _under_1 = _inLine_1.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_1 = _under_1.oneOfThemContains("cannot contain sub-element");
      this.assertConstraints(_oneOfThemContains_1);
      FluentIssueCollection _errorsOnly_2 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_2 = _errorsOnly_2.inLine(24);
      FluentIssueCollection _under_2 = _inLine_2.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_2 = _under_2.oneOfThemContains("cannot contain sub-element");
      this.assertConstraints(_oneOfThemContains_2);
      FluentIssueCollection _errorsOnly_3 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_3 = _errorsOnly_3.inLine(25);
      FluentIssueCollection _under_3 = _inLine_3.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_3 = _under_3.oneOfThemContains("cannot contain sub-element");
      this.assertConstraints(_oneOfThemContains_3);
      FluentIssueCollection _errorsOnly_4 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_4 = _errorsOnly_4.inLine(27);
      FluentIssueCollection _under_4 = _inLine_4.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_4 = _under_4.oneOfThemContains("cannot contain sub-element");
      this.assertConstraints(_oneOfThemContains_4);
      FluentIssueCollection _errorsOnly_5 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_5 = _errorsOnly_5.inLine(29);
      FluentIssueCollection _under_5 = _inLine_5.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_5 = _under_5.oneOfThemContains("cannot contain sub-element");
      FluentIssueCollection _oneOfThemContains_6 = _oneOfThemContains_5.oneOfThemContains("set to AUTO");
      this.assertConstraints(_oneOfThemContains_6);
      FluentIssueCollection _errorsOnly_6 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_6 = _errorsOnly_6.inLine(30);
      FluentIssueCollection _under_6 = _inLine_6.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_7 = _under_6.oneOfThemContains("cannot contain sub-element");
      FluentIssueCollection _oneOfThemContains_8 = _oneOfThemContains_7.oneOfThemContains("set to AUTO");
      this.assertConstraints(_oneOfThemContains_8);
      FluentIssueCollection _errorsOnly_7 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_7 = _errorsOnly_7.inLine(31);
      FluentIssueCollection _under_7 = _inLine_7.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_9 = _under_7.oneOfThemContains("cannot contain sub-element");
      FluentIssueCollection _oneOfThemContains_10 = _oneOfThemContains_9.oneOfThemContains("set to AUTO");
      this.assertConstraints(_oneOfThemContains_10);
      FluentIssueCollection _errorsOnly_8 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_8 = _errorsOnly_8.inLine(32);
      FluentIssueCollection _under_8 = _inLine_8.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_11 = _under_8.oneOfThemContains("cannot contain sub-element");
      FluentIssueCollection _oneOfThemContains_12 = _oneOfThemContains_11.oneOfThemContains("set to AUTO");
      this.assertConstraints(_oneOfThemContains_12);
      FluentIssueCollection _errorsOnly_9 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_9 = _errorsOnly_9.inLine(34);
      FluentIssueCollection _under_9 = _inLine_9.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_13 = _under_9.oneOfThemContains("cannot contain sub-element");
      FluentIssueCollection _oneOfThemContains_14 = _oneOfThemContains_13.oneOfThemContains("set to AUTO");
      this.assertConstraints(_oneOfThemContains_14);
  }
  
  @Test
  public void defaultNumberTest() {
      this.ignoreFormattingDifferences();
      this.testFile("testNumberDefault.oil");
      FluentIssueCollection _errorsOnly = this.issues.errorsOnly();
      FluentIssueCollection _inLine = _errorsOnly.inLine(7);
      FluentIssueCollection _under = _inLine.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains = _under.oneOfThemContains("INT32");
      this.assertConstraints(_oneOfThemContains);
      FluentIssueCollection _errorsOnly_1 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_1 = _errorsOnly_1.inLine(8);
      FluentIssueCollection _under_1 = _inLine_1.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_1 = _under_1.oneOfThemContains("INT32");
      this.assertConstraints(_oneOfThemContains_1);
      FluentIssueCollection _errorsOnly_2 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_2 = _errorsOnly_2.inLine(11);
      FluentIssueCollection _under_2 = _inLine_2.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_2 = _under_2.oneOfThemContains("INT32");
      this.assertConstraints(_oneOfThemContains_2);
      FluentIssueCollection _errorsOnly_3 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_3 = _errorsOnly_3.inLine(13);
      FluentIssueCollection _under_3 = _inLine_3.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_3 = _under_3.oneOfThemContains("AUTO");
      this.assertConstraints(_oneOfThemContains_3);
      FluentIssueCollection _errorsOnly_4 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_4 = _errorsOnly_4.inLine(15);
      FluentIssueCollection _under_4 = _inLine_4.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_4 = _under_4.oneOfThemContains("INT32");
      this.assertConstraints(_oneOfThemContains_4);
      FluentIssueCollection _errorsOnly_5 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_5 = _errorsOnly_5.inLine(16);
      FluentIssueCollection _under_5 = _inLine_5.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_5 = _under_5.oneOfThemContains("INT32");
      this.assertConstraints(_oneOfThemContains_5);
      FluentIssueCollection _errorsOnly_6 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_6 = _errorsOnly_6.inLine(17);
      FluentIssueCollection _under_6 = _inLine_6.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_6 = _under_6.oneOfThemContains("INT32");
      this.assertConstraints(_oneOfThemContains_6);
      FluentIssueCollection _warningsOnly = this.issues.warningsOnly();
      FluentIssueCollection _inLine_7 = _warningsOnly.inLine(21);
      FluentIssueCollection _under_7 = _inLine_7.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_7 = _under_7.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_7);
      FluentIssueCollection _errorsOnly_7 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_8 = _errorsOnly_7.inLine(22);
      FluentIssueCollection _under_8 = _inLine_8.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_8 = _under_8.oneOfThemContains("positive");
      this.assertConstraints(_oneOfThemContains_8);
      FluentIssueCollection _errorsOnly_8 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_9 = _errorsOnly_8.inLine(23);
      FluentIssueCollection _under_9 = _inLine_9.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_9 = _under_9.oneOfThemContains("UINT32");
      this.assertConstraints(_oneOfThemContains_9);
      FluentIssueCollection _errorsOnly_9 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_10 = _errorsOnly_9.inLine(24);
      FluentIssueCollection _under_10 = _inLine_10.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_10 = _under_10.oneOfThemContains("UINT32");
      this.assertConstraints(_oneOfThemContains_10);
      FluentIssueCollection _errorsOnly_10 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_11 = _errorsOnly_10.inLine(26);
      FluentIssueCollection _under_11 = _inLine_11.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_11 = _under_11.oneOfThemContains("UINT32");
      this.assertConstraints(_oneOfThemContains_11);
      FluentIssueCollection _errorsOnly_11 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_12 = _errorsOnly_11.inLine(27);
      FluentIssueCollection _under_12 = _inLine_12.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_12 = _under_12.oneOfThemContains("UINT32");
      this.assertConstraints(_oneOfThemContains_12);
      FluentIssueCollection _errorsOnly_12 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_13 = _errorsOnly_12.inLine(29);
      FluentIssueCollection _under_13 = _inLine_13.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_13 = _under_13.oneOfThemContains("AUTO");
      this.assertConstraints(_oneOfThemContains_13);
      FluentIssueCollection _errorsOnly_13 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_14 = _errorsOnly_13.inLine(31);
      FluentIssueCollection _under_14 = _inLine_14.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_14 = _under_14.oneOfThemContains("UINT32");
      this.assertConstraints(_oneOfThemContains_14);
      FluentIssueCollection _errorsOnly_14 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_15 = _errorsOnly_14.inLine(32);
      FluentIssueCollection _under_15 = _inLine_15.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_15 = _under_15.oneOfThemContains("UINT32");
      this.assertConstraints(_oneOfThemContains_15);
      FluentIssueCollection _errorsOnly_15 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_16 = _errorsOnly_15.inLine(33);
      FluentIssueCollection _under_16 = _inLine_16.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_16 = _under_16.oneOfThemContains("UINT32");
      this.assertConstraints(_oneOfThemContains_16);
      FluentIssueCollection _errorsOnly_16 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_17 = _errorsOnly_16.inLine(38);
      FluentIssueCollection _under_17 = _inLine_17.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_17 = _under_17.oneOfThemContains("INT64");
      this.assertConstraints(_oneOfThemContains_17);
      FluentIssueCollection _errorsOnly_17 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_18 = _errorsOnly_17.inLine(39);
      FluentIssueCollection _under_18 = _inLine_18.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_18 = _under_18.oneOfThemContains("INT64");
      this.assertConstraints(_oneOfThemContains_18);
      FluentIssueCollection _errorsOnly_18 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_19 = _errorsOnly_18.inLine(44);
      FluentIssueCollection _under_19 = _inLine_19.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_19 = _under_19.oneOfThemContains("AUTO");
      this.assertConstraints(_oneOfThemContains_19);
      FluentIssueCollection _errorsOnly_19 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_20 = _errorsOnly_19.inLine(46);
      FluentIssueCollection _under_20 = _inLine_20.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_20 = _under_20.oneOfThemContains("INT64");
      this.assertConstraints(_oneOfThemContains_20);
      FluentIssueCollection _errorsOnly_20 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_21 = _errorsOnly_20.inLine(47);
      FluentIssueCollection _under_21 = _inLine_21.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_21 = _under_21.oneOfThemContains("INT64");
      this.assertConstraints(_oneOfThemContains_21);
      FluentIssueCollection _errorsOnly_21 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_22 = _errorsOnly_21.inLine(48);
      FluentIssueCollection _under_22 = _inLine_22.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_22 = _under_22.oneOfThemContains("INT64");
      this.assertConstraints(_oneOfThemContains_22);
      FluentIssueCollection _warningsOnly_1 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_23 = _warningsOnly_1.inLine(52);
      FluentIssueCollection _under_23 = _inLine_23.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_23 = _under_23.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_23);
      FluentIssueCollection _errorsOnly_22 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_24 = _errorsOnly_22.inLine(53);
      FluentIssueCollection _under_24 = _inLine_24.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_24 = _under_24.oneOfThemContains("positive");
      this.assertConstraints(_oneOfThemContains_24);
      FluentIssueCollection _errorsOnly_23 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_25 = _errorsOnly_23.inLine(54);
      FluentIssueCollection _under_25 = _inLine_25.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_25 = _under_25.oneOfThemContains("UINT64");
      this.assertConstraints(_oneOfThemContains_25);
      FluentIssueCollection _errorsOnly_24 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_26 = _errorsOnly_24.inLine(55);
      FluentIssueCollection _under_26 = _inLine_26.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_26 = _under_26.oneOfThemContains("UINT64");
      this.assertConstraints(_oneOfThemContains_26);
      FluentIssueCollection _errorsOnly_25 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_27 = _errorsOnly_25.inLine(57);
      FluentIssueCollection _under_27 = _inLine_27.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_27 = _under_27.oneOfThemContains("UINT64");
      this.assertConstraints(_oneOfThemContains_27);
      FluentIssueCollection _errorsOnly_26 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_28 = _errorsOnly_26.inLine(60);
      FluentIssueCollection _under_28 = _inLine_28.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_28 = _under_28.oneOfThemContains("AUTO");
      this.assertConstraints(_oneOfThemContains_28);
      FluentIssueCollection _errorsOnly_27 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_29 = _errorsOnly_27.inLine(62);
      FluentIssueCollection _under_29 = _inLine_29.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_29 = _under_29.oneOfThemContains("UINT64");
      this.assertConstraints(_oneOfThemContains_29);
      FluentIssueCollection _errorsOnly_28 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_30 = _errorsOnly_28.inLine(63);
      FluentIssueCollection _under_30 = _inLine_30.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_30 = _under_30.oneOfThemContains("UINT64");
      this.assertConstraints(_oneOfThemContains_30);
      FluentIssueCollection _errorsOnly_29 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_31 = _errorsOnly_29.inLine(64);
      FluentIssueCollection _under_31 = _inLine_31.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_31 = _under_31.oneOfThemContains("UINT64");
      this.assertConstraints(_oneOfThemContains_31);
      FluentIssueCollection _errorsOnly_30 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_32 = _errorsOnly_30.inLine(71);
      FluentIssueCollection _under_32 = _inLine_32.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_32 = _under_32.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_32);
      FluentIssueCollection _errorsOnly_31 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_33 = _errorsOnly_31.inLine(72);
      FluentIssueCollection _under_33 = _inLine_33.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_33 = _under_33.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_33);
      FluentIssueCollection _errorsOnly_32 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_34 = _errorsOnly_32.inLine(73);
      FluentIssueCollection _under_34 = _inLine_34.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_34 = _under_34.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_34);
      FluentIssueCollection _errorsOnly_33 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_35 = _errorsOnly_33.inLine(74);
      FluentIssueCollection _under_35 = _inLine_35.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_35 = _under_35.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_35);
      FluentIssueCollection _errorsOnly_34 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_36 = _errorsOnly_34.inLine(75);
      FluentIssueCollection _under_36 = _inLine_36.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_36 = _under_36.oneOfThemContains("AUTO");
      this.assertConstraints(_oneOfThemContains_36);
      FluentIssueCollection _errorsOnly_35 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_37 = _errorsOnly_35.inLine(77);
      FluentIssueCollection _under_37 = _inLine_37.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_37 = _under_37.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_37);
      FluentIssueCollection _errorsOnly_36 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_38 = _errorsOnly_36.inLine(78);
      FluentIssueCollection _under_38 = _inLine_38.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_38 = _under_38.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_38);
      FluentIssueCollection _errorsOnly_37 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_39 = _errorsOnly_37.inLine(79);
      FluentIssueCollection _under_39 = _inLine_39.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_39 = _under_39.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_39);
  }
  
  @Test
  public void numberRangeTest() {
      this.ignoreFormattingDifferences();
      this.testFile("testRange.oil");
      FluentIssueCollection _errorsOnly = this.issues.errorsOnly();
      FluentIssueCollection _inLine = _errorsOnly.inLine(7);
      FluentIssueCollection _under = _inLine.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains = _under.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains);
      FluentIssueCollection _errorsOnly_1 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_1 = _errorsOnly_1.inLine(19);
      FluentIssueCollection _under_1 = _inLine_1.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_1 = _under_1.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_1);
      FluentIssueCollection _errorsOnly_2 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_2 = _errorsOnly_2.inLine(22);
      FluentIssueCollection _under_2 = _inLine_2.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_2 = _under_2.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_2);
      FluentIssueCollection _errorsOnly_3 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_3 = _errorsOnly_3.inLine(24);
      FluentIssueCollection _under_3 = _inLine_3.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_3 = _under_3.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_3);
      FluentIssueCollection _errorsOnly_4 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_4 = _errorsOnly_4.inLine(42);
      FluentIssueCollection _under_4 = _inLine_4.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_4 = _under_4.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_4);
      FluentIssueCollection _errorsOnly_5 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_5 = _errorsOnly_5.inLine(45);
      FluentIssueCollection _under_5 = _inLine_5.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_5 = _under_5.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_5);
      FluentIssueCollection _errorsOnly_6 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_6 = _errorsOnly_6.inLine(46);
      FluentIssueCollection _under_6 = _inLine_6.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_6 = _under_6.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_6);
      FluentIssueCollection _errorsOnly_7 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_7 = _errorsOnly_7.inLine(49);
      FluentIssueCollection _under_7 = _inLine_7.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_7 = _under_7.oneOfThemContains("bigger");
      FluentIssueCollection _oneOfThemContains_8 = _oneOfThemContains_7.oneOfThemContains("-1");
      this.assertConstraints(_oneOfThemContains_8);
      FluentIssueCollection _errorsOnly_8 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_8 = _errorsOnly_8.inLine(49);
      FluentIssueCollection _under_8 = _inLine_8.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_9 = _under_8.oneOfThemContains("bigger");
      FluentIssueCollection _oneOfThemContains_10 = _oneOfThemContains_9.oneOfThemContains("0x4");
      this.assertConstraints(_oneOfThemContains_10);
      FluentIssueCollection _errorsOnly_9 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_9 = _errorsOnly_9.inLine(55);
      FluentIssueCollection _under_9 = _inLine_9.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_11 = _under_9.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_11);
      FluentIssueCollection _errorsOnly_10 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_10 = _errorsOnly_10.inLine(67);
      FluentIssueCollection _under_10 = _inLine_10.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_12 = _under_10.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_12);
      FluentIssueCollection _errorsOnly_11 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_11 = _errorsOnly_11.inLine(70);
      FluentIssueCollection _under_11 = _inLine_11.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_13 = _under_11.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_13);
      FluentIssueCollection _errorsOnly_12 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_12 = _errorsOnly_12.inLine(72);
      FluentIssueCollection _under_12 = _inLine_12.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_14 = _under_12.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_14);
      FluentIssueCollection _errorsOnly_13 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_13 = _errorsOnly_13.inLine(90);
      FluentIssueCollection _under_13 = _inLine_13.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_15 = _under_13.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_15);
      FluentIssueCollection _errorsOnly_14 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_14 = _errorsOnly_14.inLine(93);
      FluentIssueCollection _under_14 = _inLine_14.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_16 = _under_14.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_16);
      FluentIssueCollection _errorsOnly_15 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_15 = _errorsOnly_15.inLine(94);
      FluentIssueCollection _under_15 = _inLine_15.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_17 = _under_15.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_17);
      FluentIssueCollection _errorsOnly_16 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_16 = _errorsOnly_16.inLine(97);
      FluentIssueCollection _under_16 = _inLine_16.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_18 = _under_16.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_18);
      FluentIssueCollection _errorsOnly_17 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_17 = _errorsOnly_17.inLine(103);
      FluentIssueCollection _under_17 = _inLine_17.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_19 = _under_17.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_19);
      FluentIssueCollection _errorsOnly_18 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_18 = _errorsOnly_18.inLine(115);
      FluentIssueCollection _under_18 = _inLine_18.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_20 = _under_18.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_20);
      FluentIssueCollection _errorsOnly_19 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_19 = _errorsOnly_19.inLine(118);
      FluentIssueCollection _under_19 = _inLine_19.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_21 = _under_19.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_21);
      FluentIssueCollection _errorsOnly_20 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_20 = _errorsOnly_20.inLine(137);
      FluentIssueCollection _under_20 = _inLine_20.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_22 = _under_20.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_22);
      FluentIssueCollection _errorsOnly_21 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_21 = _errorsOnly_21.inLine(139);
      FluentIssueCollection _under_21 = _inLine_21.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_23 = _under_21.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_23);
      FluentIssueCollection _errorsOnly_22 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_22 = _errorsOnly_22.inLine(149);
      FluentIssueCollection _under_22 = _inLine_22.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_24 = _under_22.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_24);
      FluentIssueCollection _errorsOnly_23 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_23 = _errorsOnly_23.inLine(150);
      FluentIssueCollection _under_23 = _inLine_23.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_25 = _under_23.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_25);
      FluentIssueCollection _errorsOnly_24 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_24 = _errorsOnly_24.inLine(161);
      FluentIssueCollection _under_24 = _inLine_24.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_26 = _under_24.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_26);
      FluentIssueCollection _errorsOnly_25 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_25 = _errorsOnly_25.inLine(163);
      FluentIssueCollection _under_25 = _inLine_25.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_27 = _under_25.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_27);
      FluentIssueCollection _errorsOnly_26 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_26 = _errorsOnly_26.inLine(173);
      FluentIssueCollection _under_26 = _inLine_26.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_28 = _under_26.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_28);
      FluentIssueCollection _errorsOnly_27 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_27 = _errorsOnly_27.inLine(174);
      FluentIssueCollection _under_27 = _inLine_27.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_29 = _under_27.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_29);
      FluentIssueCollection _errorsOnly_28 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_28 = _errorsOnly_28.inLine(185);
      FluentIssueCollection _under_28 = _inLine_28.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_30 = _under_28.oneOfThemContains("bigger");
      this.assertConstraints(_oneOfThemContains_30);
      FluentIssueCollection _errorsOnly_29 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_29 = _errorsOnly_29.inLine(9);
      FluentIssueCollection _under_29 = _inLine_29.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_31 = _under_29.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_32 = _oneOfThemContains_31.oneOfThemContains("INT32");
      this.assertConstraints(_oneOfThemContains_32);
      FluentIssueCollection _errorsOnly_30 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_30 = _errorsOnly_30.inLine(10);
      FluentIssueCollection _under_30 = _inLine_30.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_33 = _under_30.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_34 = _oneOfThemContains_33.oneOfThemContains("INT32");
      this.assertConstraints(_oneOfThemContains_34);
      FluentIssueCollection _errorsOnly_31 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_31 = _errorsOnly_31.inLine(29);
      FluentIssueCollection _under_31 = _inLine_31.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_35 = _under_31.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_36 = _oneOfThemContains_35.oneOfThemContains("positive");
      this.assertConstraints(_oneOfThemContains_36);
      FluentIssueCollection _errorsOnly_32 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_32 = _errorsOnly_32.inLine(32);
      FluentIssueCollection _under_32 = _inLine_32.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_37 = _under_32.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_38 = _oneOfThemContains_37.oneOfThemContains("UINT32");
      this.assertConstraints(_oneOfThemContains_38);
      FluentIssueCollection _errorsOnly_33 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_33 = _errorsOnly_33.inLine(33);
      FluentIssueCollection _under_33 = _inLine_33.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_39 = _under_33.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_40 = _oneOfThemContains_39.oneOfThemContains("UINT32");
      this.assertConstraints(_oneOfThemContains_40);
      FluentIssueCollection _errorsOnly_34 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_34 = _errorsOnly_34.inLine(57);
      FluentIssueCollection _under_34 = _inLine_34.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_41 = _under_34.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_42 = _oneOfThemContains_41.oneOfThemContains("INT64");
      this.assertConstraints(_oneOfThemContains_42);
      FluentIssueCollection _errorsOnly_35 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_35 = _errorsOnly_35.inLine(58);
      FluentIssueCollection _under_35 = _inLine_35.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_43 = _under_35.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_44 = _oneOfThemContains_43.oneOfThemContains("INT64");
      this.assertConstraints(_oneOfThemContains_44);
      FluentIssueCollection _errorsOnly_36 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_36 = _errorsOnly_36.inLine(77);
      FluentIssueCollection _under_36 = _inLine_36.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_45 = _under_36.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_46 = _oneOfThemContains_45.oneOfThemContains("positive");
      this.assertConstraints(_oneOfThemContains_46);
      FluentIssueCollection _errorsOnly_37 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_37 = _errorsOnly_37.inLine(80);
      FluentIssueCollection _under_37 = _inLine_37.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_47 = _under_37.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_48 = _oneOfThemContains_47.oneOfThemContains("UINT64");
      this.assertConstraints(_oneOfThemContains_48);
      FluentIssueCollection _errorsOnly_38 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_38 = _errorsOnly_38.inLine(81);
      FluentIssueCollection _under_38 = _inLine_38.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_49 = _under_38.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_50 = _oneOfThemContains_49.oneOfThemContains("UINT64");
      this.assertConstraints(_oneOfThemContains_50);
      FluentIssueCollection _errorsOnly_39 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_39 = _errorsOnly_39.inLine(119);
      FluentIssueCollection _under_39 = _inLine_39.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_51 = _under_39.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_52 = _oneOfThemContains_51.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_52);
      FluentIssueCollection _errorsOnly_40 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_40 = _errorsOnly_40.inLine(121);
      FluentIssueCollection _under_40 = _inLine_40.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_53 = _under_40.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_54 = _oneOfThemContains_53.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_54);
      FluentIssueCollection _errorsOnly_41 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_41 = _errorsOnly_41.inLine(122);
      FluentIssueCollection _under_41 = _inLine_41.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_55 = _under_41.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_56 = _oneOfThemContains_55.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_56);
      FluentIssueCollection _errorsOnly_42 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_42 = _errorsOnly_42.inLine(123);
      FluentIssueCollection _under_42 = _inLine_42.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_57 = _under_42.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_58 = _oneOfThemContains_57.oneOfThemContains("FLOAT");
      FluentIssueCollection _oneOfThemContains_59 = _oneOfThemContains_58.oneOfThemContains("0x0");
      this.assertConstraints(_oneOfThemContains_59);
      FluentIssueCollection _errorsOnly_43 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_43 = _errorsOnly_43.inLine(123);
      FluentIssueCollection _under_43 = _inLine_43.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_60 = _under_43.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_61 = _oneOfThemContains_60.oneOfThemContains("FLOAT");
      FluentIssueCollection _oneOfThemContains_62 = _oneOfThemContains_61.oneOfThemContains("0x5");
      this.assertConstraints(_oneOfThemContains_62);
      FluentIssueCollection _errorsOnly_44 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_44 = _errorsOnly_44.inLine(186);
      FluentIssueCollection _under_44 = _inLine_44.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_63 = _under_44.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_64 = _oneOfThemContains_63.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_64);
      FluentIssueCollection _errorsOnly_45 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_45 = _errorsOnly_45.inLine(188);
      FluentIssueCollection _under_45 = _inLine_45.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_65 = _under_45.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_66 = _oneOfThemContains_65.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_66);
      FluentIssueCollection _errorsOnly_46 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_46 = _errorsOnly_46.inLine(18);
      FluentIssueCollection _under_46 = _inLine_46.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_67 = _under_46.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_67);
      FluentIssueCollection _errorsOnly_47 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_47 = _errorsOnly_47.inLine(20);
      FluentIssueCollection _under_47 = _inLine_47.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_68 = _under_47.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_68);
      FluentIssueCollection _errorsOnly_48 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_48 = _errorsOnly_48.inLine(23);
      FluentIssueCollection _under_48 = _inLine_48.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_69 = _under_48.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_69);
      FluentIssueCollection _errorsOnly_49 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_49 = _errorsOnly_49.inLine(41);
      FluentIssueCollection _under_49 = _inLine_49.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_70 = _under_49.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_70);
      FluentIssueCollection _errorsOnly_50 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_50 = _errorsOnly_50.inLine(43);
      FluentIssueCollection _under_50 = _inLine_50.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_71 = _under_50.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_71);
      FluentIssueCollection _errorsOnly_51 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_51 = _errorsOnly_51.inLine(48);
      FluentIssueCollection _under_51 = _inLine_51.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_72 = _under_51.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_72);
      FluentIssueCollection _errorsOnly_52 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_52 = _errorsOnly_52.inLine(49);
      FluentIssueCollection _under_52 = _inLine_52.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_73 = _under_52.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_73);
      FluentIssueCollection _errorsOnly_53 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_53 = _errorsOnly_53.inLine(66);
      FluentIssueCollection _under_53 = _inLine_53.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_74 = _under_53.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_74);
      FluentIssueCollection _errorsOnly_54 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_54 = _errorsOnly_54.inLine(68);
      FluentIssueCollection _under_54 = _inLine_54.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_75 = _under_54.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_75);
      FluentIssueCollection _errorsOnly_55 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_55 = _errorsOnly_55.inLine(71);
      FluentIssueCollection _under_55 = _inLine_55.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_76 = _under_55.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_76);
      FluentIssueCollection _errorsOnly_56 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_56 = _errorsOnly_56.inLine(89);
      FluentIssueCollection _under_56 = _inLine_56.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_77 = _under_56.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_77);
      FluentIssueCollection _errorsOnly_57 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_57 = _errorsOnly_57.inLine(91);
      FluentIssueCollection _under_57 = _inLine_57.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_78 = _under_57.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_78);
      FluentIssueCollection _errorsOnly_58 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_58 = _errorsOnly_58.inLine(96);
      FluentIssueCollection _under_58 = _inLine_58.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_79 = _under_58.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_79);
      FluentIssueCollection _errorsOnly_59 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_59 = _errorsOnly_59.inLine(97);
      FluentIssueCollection _under_59 = _inLine_59.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_80 = _under_59.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_80);
      FluentIssueCollection _errorsOnly_60 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_60 = _errorsOnly_60.inLine(114);
      FluentIssueCollection _under_60 = _inLine_60.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_81 = _under_60.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_81);
      FluentIssueCollection _errorsOnly_61 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_61 = _errorsOnly_61.inLine(116);
      FluentIssueCollection _under_61 = _inLine_61.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_82 = _under_61.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_82);
      FluentIssueCollection _errorsOnly_62 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_62 = _errorsOnly_62.inLine(131);
      FluentIssueCollection _under_62 = _inLine_62.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_83 = _under_62.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_83);
      FluentIssueCollection _errorsOnly_63 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_63 = _errorsOnly_63.inLine(136);
      FluentIssueCollection _under_63 = _inLine_63.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_84 = _under_63.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_84);
      FluentIssueCollection _errorsOnly_64 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_64 = _errorsOnly_64.inLine(143);
      FluentIssueCollection _under_64 = _inLine_64.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_85 = _under_64.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_85);
      FluentIssueCollection _errorsOnly_65 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_65 = _errorsOnly_65.inLine(148);
      FluentIssueCollection _under_65 = _inLine_65.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_86 = _under_65.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_86);
      FluentIssueCollection _errorsOnly_66 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_66 = _errorsOnly_66.inLine(155);
      FluentIssueCollection _under_66 = _inLine_66.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_87 = _under_66.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_87);
      FluentIssueCollection _errorsOnly_67 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_67 = _errorsOnly_67.inLine(160);
      FluentIssueCollection _under_67 = _inLine_67.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_88 = _under_67.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_88);
      FluentIssueCollection _errorsOnly_68 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_68 = _errorsOnly_68.inLine(167);
      FluentIssueCollection _under_68 = _inLine_68.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_89 = _under_68.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_89);
      FluentIssueCollection _errorsOnly_69 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_69 = _errorsOnly_69.inLine(172);
      FluentIssueCollection _under_69 = _inLine_69.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_90 = _under_69.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_90);
      FluentIssueCollection _errorsOnly_70 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_70 = _errorsOnly_70.inLine(179);
      FluentIssueCollection _under_70 = _inLine_70.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_91 = _under_70.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_91);
      FluentIssueCollection _errorsOnly_71 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_71 = _errorsOnly_71.inLine(184);
      FluentIssueCollection _under_71 = _inLine_71.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_92 = _under_71.oneOfThemContains("smaller");
      this.assertConstraints(_oneOfThemContains_92);
      FluentIssueCollection _warningsOnly = this.issues.warningsOnly();
      FluentIssueCollection _inLine_72 = _warningsOnly.inLine(30);
      FluentIssueCollection _under_72 = _inLine_72.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_93 = _under_72.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_93);
      FluentIssueCollection _warningsOnly_1 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_73 = _warningsOnly_1.inLine(46);
      FluentIssueCollection _under_73 = _inLine_73.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_94 = _under_73.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_94);
      FluentIssueCollection _warningsOnly_2 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_74 = _warningsOnly_2.inLine(47);
      FluentIssueCollection _under_74 = _inLine_74.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_95 = _under_74.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_95);
      FluentIssueCollection _warningsOnly_3 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_75 = _warningsOnly_3.inLine(47);
      FluentIssueCollection _under_75 = _inLine_75.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_96 = _under_75.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_96);
      FluentIssueCollection _warningsOnly_4 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_76 = _warningsOnly_4.inLine(49);
      FluentIssueCollection _under_76 = _inLine_76.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_97 = _under_76.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_97);
      FluentIssueCollection _warningsOnly_5 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_77 = _warningsOnly_5.inLine(50);
      FluentIssueCollection _under_77 = _inLine_77.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_98 = _under_77.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_98);
      FluentIssueCollection _warningsOnly_6 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_78 = _warningsOnly_6.inLine(78);
      FluentIssueCollection _under_78 = _inLine_78.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_99 = _under_78.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_99);
      FluentIssueCollection _warningsOnly_7 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_79 = _warningsOnly_7.inLine(94);
      FluentIssueCollection _under_79 = _inLine_79.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_100 = _under_79.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_100);
      FluentIssueCollection _warningsOnly_8 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_80 = _warningsOnly_8.inLine(95);
      FluentIssueCollection _under_80 = _inLine_80.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_101 = _under_80.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_101);
      FluentIssueCollection _warningsOnly_9 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_81 = _warningsOnly_9.inLine(95);
      FluentIssueCollection _under_81 = _inLine_81.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_102 = _under_81.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_102);
      FluentIssueCollection _warningsOnly_10 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_82 = _warningsOnly_10.inLine(97);
      FluentIssueCollection _under_82 = _inLine_82.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_103 = _under_82.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_103);
      FluentIssueCollection _warningsOnly_11 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_83 = _warningsOnly_11.inLine(98);
      FluentIssueCollection _under_83 = _inLine_83.under(com.eu.evidence.rtdruid.oil.xtext.model.Range.class);
      FluentIssueCollection _oneOfThemContains_104 = _under_83.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_104);
      FluentIssueCollection _warningsOnly_12 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_84 = _warningsOnly_12.inLine(151);
      FluentIssueCollection _under_84 = _inLine_84.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_105 = _under_84.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_105);
      FluentIssueCollection _warningsOnly_13 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_85 = _warningsOnly_13.inLine(175);
      FluentIssueCollection _under_85 = _inLine_85.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_106 = _under_85.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_106);
  }
  
  @Test
  public void numberListTest() {
      this.ignoreSerializationDifferences();
      this.testFile("testList.oil");
      FluentIssueCollection _warningsOnly = this.issues.warningsOnly();
      FluentIssueCollection _inLine = _warningsOnly.inLine(21);
      FluentIssueCollection _under = _inLine.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains = _under.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains);
      FluentIssueCollection _warningsOnly_1 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_1 = _warningsOnly_1.inLine(23);
      FluentIssueCollection _under_1 = _inLine_1.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_1 = _under_1.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_1);
      FluentIssueCollection _warningsOnly_2 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_2 = _warningsOnly_2.inLine(24);
      FluentIssueCollection _under_2 = _inLine_2.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_2 = _under_2.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_2);
      FluentIssueCollection _warningsOnly_3 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_3 = _warningsOnly_3.inLine(29);
      FluentIssueCollection _under_3 = _inLine_3.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_3 = _under_3.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_3);
      FluentIssueCollection _warningsOnly_4 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_4 = _warningsOnly_4.inLine(30);
      FluentIssueCollection _under_4 = _inLine_4.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_4 = _under_4.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_4);
      FluentIssueCollection _warningsOnly_5 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_5 = _warningsOnly_5.inLine(30);
      FluentIssueCollection _under_5 = _inLine_5.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_5 = _under_5.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_5);
      FluentIssueCollection _warningsOnly_6 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_6 = _warningsOnly_6.inLine(31);
      FluentIssueCollection _under_6 = _inLine_6.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_6 = _under_6.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_6);
      FluentIssueCollection _warningsOnly_7 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_7 = _warningsOnly_7.inLine(53);
      FluentIssueCollection _under_7 = _inLine_7.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_7 = _under_7.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_7);
      FluentIssueCollection _warningsOnly_8 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_8 = _warningsOnly_8.inLine(55);
      FluentIssueCollection _under_8 = _inLine_8.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_8 = _under_8.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_8);
      FluentIssueCollection _warningsOnly_9 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_9 = _warningsOnly_9.inLine(56);
      FluentIssueCollection _under_9 = _inLine_9.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_9 = _under_9.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_9);
      FluentIssueCollection _warningsOnly_10 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_10 = _warningsOnly_10.inLine(61);
      FluentIssueCollection _under_10 = _inLine_10.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_10 = _under_10.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_10);
      FluentIssueCollection _warningsOnly_11 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_11 = _warningsOnly_11.inLine(62);
      FluentIssueCollection _under_11 = _inLine_11.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_11 = _under_11.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_11);
      FluentIssueCollection _warningsOnly_12 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_12 = _warningsOnly_12.inLine(62);
      FluentIssueCollection _under_12 = _inLine_12.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_12 = _under_12.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_12);
      FluentIssueCollection _warningsOnly_13 = this.issues.warningsOnly();
      FluentIssueCollection _inLine_13 = _warningsOnly_13.inLine(63);
      FluentIssueCollection _under_13 = _inLine_13.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_13 = _under_13.oneOfThemContains("Assign -1");
      this.assertConstraints(_oneOfThemContains_13);
      FluentIssueCollection _errorsOnly = this.issues.errorsOnly();
      FluentIssueCollection _inLine_14 = _errorsOnly.inLine(13);
      FluentIssueCollection _under_14 = _inLine_14.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_14 = _under_14.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_15 = _oneOfThemContains_14.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_15);
      FluentIssueCollection _errorsOnly_1 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_15 = _errorsOnly_1.inLine(29);
      FluentIssueCollection _under_15 = _inLine_15.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_16 = _under_15.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_17 = _oneOfThemContains_16.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_17);
      FluentIssueCollection _errorsOnly_2 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_16 = _errorsOnly_2.inLine(45);
      FluentIssueCollection _under_16 = _inLine_16.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_18 = _under_16.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_19 = _oneOfThemContains_18.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_19);
      FluentIssueCollection _errorsOnly_3 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_17 = _errorsOnly_3.inLine(61);
      FluentIssueCollection _under_17 = _inLine_17.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_20 = _under_17.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_21 = _oneOfThemContains_20.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_21);
      FluentIssueCollection _errorsOnly_4 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_18 = _errorsOnly_4.inLine(77);
      FluentIssueCollection _under_18 = _inLine_18.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_22 = _under_18.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_23 = _oneOfThemContains_22.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_23);
      FluentIssueCollection _errorsOnly_5 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_19 = _errorsOnly_5.inLine(80);
      FluentIssueCollection _under_19 = _inLine_19.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_24 = _under_19.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_25 = _oneOfThemContains_24.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_25);
      FluentIssueCollection _errorsOnly_6 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_20 = _errorsOnly_6.inLine(91);
      FluentIssueCollection _under_20 = _inLine_20.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_26 = _under_20.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_27 = _oneOfThemContains_26.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_27);
      FluentIssueCollection _errorsOnly_7 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_21 = _errorsOnly_7.inLine(93);
      FluentIssueCollection _under_21 = _inLine_21.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_28 = _under_21.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_29 = _oneOfThemContains_28.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_29);
      FluentIssueCollection _errorsOnly_8 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_22 = _errorsOnly_8.inLine(95);
      FluentIssueCollection _under_22 = _inLine_22.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_30 = _under_22.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_31 = _oneOfThemContains_30.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_31);
      FluentIssueCollection _errorsOnly_9 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_23 = _errorsOnly_9.inLine(96);
      FluentIssueCollection _under_23 = _inLine_23.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_32 = _under_23.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_33 = _oneOfThemContains_32.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_33);
      FluentIssueCollection _errorsOnly_10 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_24 = _errorsOnly_10.inLine(100);
      FluentIssueCollection _under_24 = _inLine_24.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_34 = _under_24.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_35 = _oneOfThemContains_34.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_35);
      FluentIssueCollection _errorsOnly_11 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_25 = _errorsOnly_11.inLine(102);
      FluentIssueCollection _under_25 = _inLine_25.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_36 = _under_25.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_37 = _oneOfThemContains_36.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_37);
      FluentIssueCollection _errorsOnly_12 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_26 = _errorsOnly_12.inLine(104);
      FluentIssueCollection _under_26 = _inLine_26.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_38 = _under_26.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_39 = _oneOfThemContains_38.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_39);
      FluentIssueCollection _errorsOnly_13 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_27 = _errorsOnly_13.inLine(108);
      FluentIssueCollection _under_27 = _inLine_27.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_40 = _under_27.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_41 = _oneOfThemContains_40.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_41);
      FluentIssueCollection _errorsOnly_14 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_28 = _errorsOnly_14.inLine(110);
      FluentIssueCollection _under_28 = _inLine_28.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_42 = _under_28.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_43 = _oneOfThemContains_42.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_43);
      FluentIssueCollection _errorsOnly_15 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_29 = _errorsOnly_15.inLine(112);
      FluentIssueCollection _under_29 = _inLine_29.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_44 = _under_29.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_45 = _oneOfThemContains_44.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_45);
      FluentIssueCollection _errorsOnly_16 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_30 = _errorsOnly_16.inLine(113);
      FluentIssueCollection _under_30 = _inLine_30.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_46 = _under_30.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_47 = _oneOfThemContains_46.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_47);
      FluentIssueCollection _errorsOnly_17 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_31 = _errorsOnly_17.inLine(117);
      FluentIssueCollection _under_31 = _inLine_31.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_48 = _under_31.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_49 = _oneOfThemContains_48.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_49);
      FluentIssueCollection _errorsOnly_18 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_32 = _errorsOnly_18.inLine(119);
      FluentIssueCollection _under_32 = _inLine_32.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_50 = _under_32.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_51 = _oneOfThemContains_50.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_51);
      FluentIssueCollection _errorsOnly_19 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_33 = _errorsOnly_19.inLine(121);
      FluentIssueCollection _under_33 = _inLine_33.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_52 = _under_33.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_53 = _oneOfThemContains_52.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_53);
      FluentIssueCollection _errorsOnly_20 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_34 = _errorsOnly_20.inLine(125);
      FluentIssueCollection _under_34 = _inLine_34.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_54 = _under_34.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_55 = _oneOfThemContains_54.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_55);
      FluentIssueCollection _errorsOnly_21 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_35 = _errorsOnly_21.inLine(128);
      FluentIssueCollection _under_35 = _inLine_35.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_56 = _under_35.oneOfThemContains("is not");
      FluentIssueCollection _oneOfThemContains_57 = _oneOfThemContains_56.oneOfThemContains("valid");
      this.assertConstraints(_oneOfThemContains_57);
      FluentIssueCollection _errorsOnly_22 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_36 = _errorsOnly_22.inLine(10);
      FluentIssueCollection _under_36 = _inLine_36.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_58 = _under_36.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_59 = _oneOfThemContains_58.oneOfThemContains("INT32");
      this.assertConstraints(_oneOfThemContains_59);
      FluentIssueCollection _errorsOnly_23 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_37 = _errorsOnly_23.inLine(26);
      FluentIssueCollection _under_37 = _inLine_37.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_60 = _under_37.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_61 = _oneOfThemContains_60.oneOfThemContains("UINT32");
      this.assertConstraints(_oneOfThemContains_61);
      FluentIssueCollection _errorsOnly_24 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_38 = _errorsOnly_24.inLine(31);
      FluentIssueCollection _under_38 = _inLine_38.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_62 = _under_38.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_63 = _oneOfThemContains_62.oneOfThemContains("positive");
      this.assertConstraints(_oneOfThemContains_63);
      FluentIssueCollection _errorsOnly_25 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_39 = _errorsOnly_25.inLine(42);
      FluentIssueCollection _under_39 = _inLine_39.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_64 = _under_39.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_65 = _oneOfThemContains_64.oneOfThemContains("INT64");
      this.assertConstraints(_oneOfThemContains_65);
      FluentIssueCollection _errorsOnly_26 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_40 = _errorsOnly_26.inLine(58);
      FluentIssueCollection _under_40 = _inLine_40.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_66 = _under_40.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_67 = _oneOfThemContains_66.oneOfThemContains("UINT64");
      this.assertConstraints(_oneOfThemContains_67);
      FluentIssueCollection _errorsOnly_27 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_41 = _errorsOnly_27.inLine(63);
      FluentIssueCollection _under_41 = _inLine_41.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_68 = _under_41.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_69 = _oneOfThemContains_68.oneOfThemContains("positive");
      this.assertConstraints(_oneOfThemContains_69);
      FluentIssueCollection _errorsOnly_28 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_42 = _errorsOnly_28.inLine(75);
      FluentIssueCollection _under_42 = _inLine_42.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_70 = _under_42.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_71 = _oneOfThemContains_70.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_71);
      FluentIssueCollection _errorsOnly_29 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_43 = _errorsOnly_29.inLine(76);
      FluentIssueCollection _under_43 = _inLine_43.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_72 = _under_43.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_73 = _oneOfThemContains_72.oneOfThemContains("FLOAT");
      FluentIssueCollection _oneOfThemContains_74 = _oneOfThemContains_73.oneOfThemContains("0x1");
      this.assertConstraints(_oneOfThemContains_74);
      FluentIssueCollection _errorsOnly_30 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_44 = _errorsOnly_30.inLine(76);
      FluentIssueCollection _under_44 = _inLine_44.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_75 = _under_44.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_76 = _oneOfThemContains_75.oneOfThemContains("FLOAT");
      FluentIssueCollection _oneOfThemContains_77 = _oneOfThemContains_76.oneOfThemContains("0x5");
      this.assertConstraints(_oneOfThemContains_77);
      FluentIssueCollection _errorsOnly_31 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_45 = _errorsOnly_31.inLine(81);
      FluentIssueCollection _under_45 = _inLine_45.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueList.class);
      FluentIssueCollection _oneOfThemContains_78 = _under_45.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_79 = _oneOfThemContains_78.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_79);
      FluentIssueCollection _errorsOnly_32 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_46 = _errorsOnly_32.inLine(82);
      FluentIssueCollection _under_46 = _inLine_46.under(com.eu.evidence.rtdruid.oil.xtext.model.ValueType.class);
      FluentIssueCollection _oneOfThemContains_80 = _under_46.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_81 = _oneOfThemContains_80.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_81);
      FluentIssueCollection _errorsOnly_33 = this.issues.errorsOnly();
      FluentIssueCollection _inLine_47 = _errorsOnly_33.inLine(129);
      FluentIssueCollection _under_47 = _inLine_47.under(com.eu.evidence.rtdruid.oil.xtext.model.Parameter.class);
      FluentIssueCollection _oneOfThemContains_82 = _under_47.oneOfThemContains("Expected");
      FluentIssueCollection _oneOfThemContains_83 = _oneOfThemContains_82.oneOfThemContains("FLOAT");
      this.assertConstraints(_oneOfThemContains_83);
  }
}
