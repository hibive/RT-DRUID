IMPLEMENTATION a {
	OS {
		ENUM [
			t_int32 {
				INT32[1..2] 	a1;
				INT32[-1..1] 	a2;
				INT32[0..-1] 	a3; // ERROR
				INT32[0..0] 	a4;
				INT32[0..0.3] 	a5; // ERROR
				INT32[0.2..3] 	a6; // ERROR
//				INT32[-1..0..1] a7; // ERROR
//				INT32[abc..2] 	a8;
//				INT32["abc"..1] a9;
//				INT32[0..abc] 	a10; // ERROR
//				INT32[0.."abc"] a11;
				INT32[1..2] 	a12 = 1;
				INT32[1..2] 	a13 = 2;
				INT32[1..2] 	a14 = -1;
				INT32[1..2] 	a15 = 3;
				INT32[-1..-1] 	a16 = -2;
				INT32[-1..-1] 	a17 = -1;
				INT32[-1..-1] 	a18 = 0;
				INT32[0x0..4] 	a19 = -1;
				INT32[-1..0x0] 	a20 = 0x4;
				INT32[0x0..0x5] a21 = 0x2;
			},
			t_uint32 {
				UINT32[1..2] 	a1;
				UINT32[-3..1] 	a2;
				UINT32[0..-1] 	a3; // ERROR
				UINT32[0..0] 	a4;
				UINT32[0..0.3] 	a5; // ERROR
				UINT32[0.2..3] 	a6; // ERROR
//				UINT32[-1..0..1] a7; // ERROR
//				UINT32[abc..2] 	a8;
//				UINT32["abc"..1] a9;
//				UINT32[0..abc] 	a10; // ERROR
//				UINT32[0.."abc"] a11;
				UINT32[1..2] 	a12 = 1;
				UINT32[1..2] 	a13 = 2;
				UINT32[1..2] 	a14 = 0;
				UINT32[1..2] 	a15 = 3;
				UINT32[1..1] 	a16 = 0;
				UINT32[1..1] 	a17 = 1;
				UINT32[1..1] 	a18 = 2;
				UINT32[1..1] 	a19 = -1;
				UINT32[-1..-1] 	a20 = -1;
				UINT32[0x3..4] 	a19 = 0x2;
				UINT32[-1..0x0] a20 = 0x4;
				UINT32[0x0..-1] a21 = 0x2;
			},
			t_int64 {
				INT64[1..2] 	a1;
				INT64[-1..1] 	a2;
				INT64[0..-1] 	a3; // ERROR
				INT64[0..0] 	a4;
				INT64[0..0.3] 	a5; // ERROR
				INT64[0.2..3] 	a6; // ERROR
//				INT64[-1..0..1] a7; // ERROR
//				INT64[abc..2] 	a8;
//				INT64["abc"..1] a9;
//				INT64[0..abc] 	a10; // ERROR
//				INT64[0.."abc"] a11;
				INT64[1..2] 	a12 = 1;
				INT64[1..2] 	a13 = 2;
				INT64[1..2] 	a14 = -1;
				INT64[1..2] 	a15 = 3;
				INT64[-1..-1] 	a16 = -2;
				INT64[-1..-1] 	a17 = -1;
				INT64[-1..-1] 	a18 = 0;
				INT64[0x0..4] 	a19 = -1;
				INT64[-1..0x0] 	a20 = 0x4;
				INT64[0x0..0x5] a21 = 0x2;
			},
			t_uint64 {
				UINT64[1..2] 	a1;
				UINT64[-3..1] 	a2;
				UINT64[0..-1] 	a3; // ERROR
				UINT64[0..0] 	a4;
				UINT64[0..0.3] 	a5; // ERROR
				UINT64[0.2..3] 	a6; // ERROR
//				UINT64[-1..0..1] a7; // ERROR
//				UINT64[abc..2] 	a8;
//				UINT64["abc"..1] a9;
//				UINT64[0..abc] 	a10; // ERROR
//				UINT64[0.."abc"] a11;
				UINT64[1..2] 	a12 = 1;
				UINT64[1..2] 	a13 = 2;
				UINT64[1..2] 	a14 = 0;
				UINT64[1..2] 	a15 = 3;
				UINT64[1..1] 	a16 = 0;
				UINT64[1..1] 	a17 = 1;
				UINT64[1..1] 	a18 = 2;
				UINT64[1..1] 	a19 = -1;
				UINT64[-1..-1] 	a20 = -1;
				UINT64[0x3..4] 	a19 = 0x2;
				UINT64[-1..0x0] a20 = 0x0;
				UINT64[0x0..-1] a21 = 0x2;
			},
			t_float {
				FLOAT[1..2] 	a1;
				FLOAT[-3..1] 	a2;
				FLOAT[0..-1] 	a3; // ERROR
				FLOAT[0.5..0.5]a4;
				FLOAT[0..0.3] 	a5; // ERROR
				FLOAT[0.2..3] 	a6; // ERROR
//				FLOAT[-1..0..1] a7; // ERROR
//				FLOAT[abc..2] 	a8;
//				FLOAT["abc"..1] a9;
//				FLOAT[0..abc] 	a10; // ERROR
//				FLOAT[0.."abc"] a11;
				FLOAT[1..2] 	a12 = 1;
				FLOAT[1..2] 	a13 = 2.0;
				FLOAT[1..2] 	a14 = 0;
				FLOAT[1..2] 	a15 = 2.01;
				FLOAT[1.0..1] 	a16 = 0;
				FLOAT[1.0..1] 	a17 = 1;
				FLOAT[1.0..1] 	a18 = 2;
				FLOAT[1..1] 	a19 = 0x1;
				FLOAT[-1..-1] 	a20 = -1;
				FLOAT[0x3..4] 	a19;
				FLOAT[-1..0x0] a20;
				FLOAT[0x0..0x5]a21;
			}
		] types[];
	};
};
CPU s {
	OS os1 {
		types = t_int32 {
			a1 = 0;
			a2 = 0;
			a4 = 0;
			a12 = 1;
			a13 = 2;
			a14 = -5;
			a15 = 5;
			a19 = 0x2;
			a20 = 0x7;
		};
		
		types = t_uint32 {
			a1 = 0;
			a2 = 0;
			a4 = 0;
			a12 = 1;
			a13 = 2;
			a14 = 0;
			a15 = 5;
			a19 = 0x2;
			a20 = -1;
			a21 = 0xFF;
		};
		types = t_int64 {
			a1 = 0;
			a2 = 0;
			a4 = 0;
			a12 = 1;
			a13 = 2;
			a14 = -5;
			a15 = 5;
			a19 = 0x2;
			a20 = 0x7;
		};
		
		types = t_uint64 {
			a1 = 0;
			a2 = 0;
			a4 = 0;
			a12 = 1;
			a13 = 2;
			a14 = 0;
			a15 = 5;
			a19 = 0x2;
			a20 = -1;
			a21 = 0xFF;
		};
		types = t_float {
			a1 = 0;
			a2 = 0.0;
			a4 = 0.5;
			a12 = 1;
			a13 = 2;
			a14 = 0;
			a15 = 5;
			a19 = 0x2;
			a20 = -1;
			a21 = 0xFF;
		};
	};
};